{"version":3,"sources":["../../src/display/StageGL.js","/Users/frank/Desktop/EaselJS/node_modules/@createjs/core/src/events/Event.js","/Users/frank/Desktop/EaselJS/node_modules/@createjs/core/src/events/EventDispatcher.js","../../src/utils/uid.js","../../src/geom/Point.js","../../src/geom/Matrix2D.js","../../src/geom/DisplayProps.js","../../src/geom/Rectangle.js","../../src/filters/Filter.js","../../src/filters/BitmapCache.js","../../src/display/DisplayObject.js","../../src/display/Container.js","../../src/events/MouseEvent.js","../../src/display/Stage.js","../../src/utils/Canvas.js","../../src/utils/VideoBuffer.js","../../src/display/Bitmap.js","../../src/display/Sprite.js","../../src/display/BitmapText.js","../../src/display/DOMElement.js","../../src/display/Graphics.js","../../src/display/MovieClip.js","../../src/display/Shadow.js","../../src/display/Shape.js","../../src/display/SpriteSheet.js","../../src/display/Text.js","../../src/filters/AlphaMapFilter.js","../../src/filters/AlphaMaskFilter.js","../../src/filters/BlurFilter.js","../../src/filters/ColorFilter.js","../../src/filters/ColorMatrix.js","../../src/filters/ColorMatrixFilter.js","../../src/ui/ButtonHelper.js","../../src/ui/Touch.js","../../src/utils/SpriteSheetBuilder.js","../../src/utils/SpriteSheetUtils.js","../../src/utils/WebGLInspector.js"],"names":["StageGL","Error","Event","type","bubbles","arguments","length","undefined","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","this","stopPropagation","stopImmediatePropagation","remove","clone","event","n","hasOwnProperty","set","props","toString","constructor","name","EventDispatcher","initialize","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","l","i","splice","eventObj","e","parent","top","list","captureListeners","o","slice","_nextId","uid","Point","x","y","setValues","copy","point","Matrix2D","a","b","c","d","tx","ty","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","Math","prependTransform","rotate","angle","skew","scale","translate","identity","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","delta","abs","PI","DisplayProps","visible","alpha","shadow","compositeOperation","Rectangle","width","height","extend","pad","left","bottom","right","rect","contains","union","intersection","x1","y1","x2","y2","intersects","isEmpty","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","getBounds","shaderParamSetup","gl","stage","shaderProgram","applyFilter","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","_Filter","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","getFilterBounds","output","filters","filterCount","f","test","define","options","_options","_useWebGL","update","filterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","release","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","getCacheDataURL","toDataURL","draw","drawImage","setValue","window","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","_EventDispatcher","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","isVisible","ignoreCache","drawCache","cache","updateContext","mtx","graphics","getMatrix","transform","drawAsPath","clip","_snapToPixelEnabled","globalAlpha","_applyShadow","updateCache","uncache","getDataURL","localToGlobal","getConcatenatedMatrix","globalToLocal","localToLocal","getConcatenatedDisplayProps","hitTest","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","getTransformedBounds","_getBounds","setBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","_tick","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","_MOUSE_EVENTS","value","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","_DisplayObject","children","mouseChildren","tickChildren","hasContent","child","addChild","Array","_len","_key","silent","_removeChildAt","indexOf","addChildAt","_len2","_key2","index","pop","removeChild","_len3","_key3","good","removeChildAt","indexes","_len4","_key4","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","mode","_getObjectsUnderPoint","recursive","_cloneChildren","mouse","activeListener","currentDepth","_testMask","result","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","_Event","Stage","_Container","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","tick","beginPath","clear","backgroundColor","mimeType","fillRect","dataURL","enableMouseOver","frequency","_testMouseOver","setInterval","_this2","min","enable","_eventListeners","t","_this3","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","nextStage","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","unshift","style","pointerId","VideoBuffer","video","readyState","_video","_canvas","_lastTime","_videoReady","bind","getImage","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","paused","currentAnimationFrame","framerate","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","play","stop","_goto","gotoAndStop","advance","time","fps","getFrameBounds","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","ss","_getSpaceWidth","change","spaceW","lineH","pool","_spritePool","childIndex","numKids","sprite","hasSpace","charAt","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_fill","_strokeIgnoreScale","_commitIndex","_instructions","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","getRGB","g","getHSL","hue","saturation","lightness","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","instructions","paramCount","params","base64","_BASE_64","fi","pl","charCount","num","sign","apply","store","unstore","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","_Fill","strokeStyle","lineWidth","lineCap","_STROKE_CAPS_MAP","lineJoin","_STROKE_JOINTS_MAP","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","inited","init","INDEPENDENT","startPosition","loop","timeline","Timeline","Object","assign","useTicks","actionsEnabled","autoReset","frameBounds","_this","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","install","positionOrLabel","_framerate","_updateTimeline","pos","resolve","_reset","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","_renderFirstFrame","tweens","_isArray","isArray","_iterator","_i","Symbol","iterator","tween","_ref","passive","_stepPosition","_addManagedChild","_setState","state","_off","labels","currentLabel","duration","SYNCHED","MovieClipPlugin","installPlugin","prop","startValues","endValues","ratio","wait","priority","Shadow","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","frameIndex","rectangle","images","onload","_handleImageLoad","onerror","_handleImageError","_img","_isArray2","_iterator2","_i2","_ref2","spacing","margin","count","_calculateFrames","animations","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgs","imgW","imgH","naturalHeight","imgLoop","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","H_OFFSETS","V_OFFSETS","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","start","center","hanging","middle","alphabetic","ideographic","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","HTMLCanvasElement","AlphaMaskFilter","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","_updateShader","replace","toFixed","_getTable","spread","EDGE","adjust","factor","reduce","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","xChange","yChange","qChange","_compiledShader","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","reset","adjustColor","IDENTITY_MATRIX","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","concat","_fixMatrix","LENGTH","toArray","val","limit","freeze","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","label","__reset","Touch","Touch","isSupported","MSPointerEvent","navigator","msMaxTouchPoints","PointerEvent","maxTouchPoints","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","disable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","addFrame","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","build","_startBuild","_drawNext","_endBuild","buildAsync","setTimeout","_run","stopAsync","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","SpriteSheetUtils","_workingCanvas","extractFrame","_workingContext","_flip","il","__tmp","fl","sfx","names","al","WebGLInspector","_stage","dispProps","item","_log","alternateOutput","log","_WebGLInspector$alter","_console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","toggleGPUDraw","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out"],"mappings":"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","file":"../easeljs-NEXT.js","sourcesContent":["/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass StageGL {\n\tconstructor () {\n\t\tthrow new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t}\n}\n\nexport default StageGL;\n","/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\nexport default Event;\n","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/**\n * @license uid\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** @ignore */\nlet _nextId = 0;\n\n/**\n * Global utility for generating sequential unique ID numbers.\n *\n * @memberof easeljs\n * @name easeljs.uid\n * @example\n * import { uid } from \"@createjs/easeljs\";\n * var ids = [];\n * while (ids.length <= 3) {\n *   ids.push(uid());\n * }\n * // ids == [0, 1, 2, 3]\n */\nexport default function uid () {\n\treturn _nextId++;\n}\n","/**\n * @license Point\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * @memberof easeljs\n * @example\n * let point = new Point(0, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n */\nexport default class Point {\n\n\tconstructor (x, y) {\n\t\tthis.setValues(x, y);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {easeljs.Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @param {easeljs.Point} point The point to copy properties from.\n\t * @return {easeljs.Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @return {easeljs.Point} a clone of the Point instance.\n\t */\n\tclone () {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t}\n\n}\n","/**\n * @license Matrix2D\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Point from \"./Point\";\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * <pre>\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n * </pre>\n *\n * @param {Number} [a] Specifies the a property for the new matrix.\n * @param {Number} [b] Specifies the b property for the new matrix.\n * @param {Number} [c] Specifies the c property for the new matrix.\n * @param {Number} [d] Specifies the d property for the new matrix.\n * @param {Number} [tx] Specifies the tx property for the new matrix.\n * @param {Number} [ty] Specifies the ty property for the new matrix.\n */\nexport default class Matrix2D {\n\n\tconstructor (a, b, c, d, tx, ty) {\n\t\tthis.setValues(a, b, c, d, tx, ty);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tprepend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet c1 = this.c;\n\t\tlet tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @param {easeljs.Matrix2D} matrix\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappendMatrix (matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t *\n\t * @example <caption>Calculate the combined transformation for a child object</caption>\n\t * let o = displayObject;\n\t * let mtx = o.getMatrix();\n\t * while (o = o.parent) {\n\t * \t // prepend each parent's transformation in turn:\n\t * \t o.prependMatrix(o.getMatrix());\n\t * }\n\t *\n\t * @param {easeljs.Matrix2D} matrix\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tprependMatrix (matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t *\n\t * @example <caption>Generate a matrix representing the transformations of a display object</caption>\n\t * let mtx = new Matrix2D();\n\t * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t *\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} [regX]\n\t * @param {Number} [regY]\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappendTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c;\n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t *\n\t * Note that the above example would not account for {@link easeljs.DisplayObject#transformMatrix} values.\n\t * See {@link easeljs.Matrix2D#prependMatrix} for an example that does.\n\t *\n\t * @example <caption>Calculate the combined transformation for a child object</caption>\n\t * let o = displayObject;\n\t * let mtx = new Matrix2D();\n\t * do  {\n\t * \t // prepend each parent's transformation in turn:\n\t * \t mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * } while (o = o.parent);\n\t *\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} [regX]\n\t * @param {Number} [regY]\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\trotate (angle) {\n\t\tangle *= Matrix2D.DEG_TO_RAD;\n\t\tlet cos = Math.cos(angle);\n\t\tlet sin = Math.sin(angle);\n\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tskew (skewX, skewY) {\n\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tscale (x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\ttranslate (x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tidentity () {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tinvert () {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tlet tx1 = this.tx;\n\t\tlet n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @return {Boolean}\n\t */\n\tisIdentity () {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t}\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @param {easeljs.Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t */\n\tequals (matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t}\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {easeljs.Point} This matrix. Useful for chaining method calls.\n\t */\n\ttransformPoint (x, y, pt = new Point()) {\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t}\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @param {Object} [target] The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tdecompose (target = {}) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tlet skewX = Math.atan2(-this.c, this.d);\n\t\tlet skewY = Math.atan2(this.b, this.a);\n\n\t\tlet delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @param {easeljs.Matrix2D} matrix The matrix to copy properties from.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @return {easeljs.Matrix2D} a clone of the Matrix2D instance.\n\t */\n\tclone () {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t}\n\n}\n\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @static\n * @type {Number}\n * @readonly\n */\nMatrix2D.DEG_TO_RAD = Math.PI/180;\n/**\n * An identity matrix, representing a null transformation.\n * @static\n * @type {easeljs.Matrix2D}\n * @readonly\n */\nMatrix2D.identity = new Matrix2D();\n","/**\n * @license DisplayProps\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Matrix2D from \"./Matrix2D\";\n\n/**\n * Used for calculating and encapsulating display related properties.\n * @memberof easeljs\n * @param {Number} [visible] Visible value.\n * @param {Number} [alpha] Alpha value.\n * @param {Number} [shadow] A Shadow instance or null.\n * @param {Number} [compositeOperation] A compositeOperation value or null.\n * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n */\nexport default class DisplayProps {\n\n\tconstructor (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type {easeljs.Shadow}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing}\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t */\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type {easeljs.Matrix2D}\n\t\t */\n\t}\n\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow] A Shadow instance or null.\n\t * @param {Number} [compositeOperation] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible;\n\t\tthis.alpha = alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new Matrix2D();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {easeljs.Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tappend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t *\n\t * @example\n\t * let o = displayObject;\n\t * let props = new DisplayProps();\n\t * do {\n\t * \t // prepend each parent's props in turn:\n\t * \t props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * } while (o = o.parent);\n\t *\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {easeljs.Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tprepend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tidentity () {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @return {easeljs.DisplayProps} a clone of the DisplayProps instance.\n\t */\n\tclone () {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t}\n\n}\n","/**\n * @license Rectangle\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n * Used by {@link easeljs.DisplayObjects#getBounds}.\n *\n * @memberof easeljs\n * @example\n * let rect = new Rectangle(0, 0, 100, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n * @param {Number} [width] The width of the Rectangle.\n * @param {Number} [height] The height of the Rectangle.\n */\nexport default class Rectangle {\n\n\tconstructor (x, y, width, height) {\n\t\tthis.setValues(x, y, width, height);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0, width = 0, height = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\textend (x, y, width = 0, height = 0) {\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the specified padding to the rectangle's bounds.\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tpad (top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @param {easeljs.Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {easeljs.Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (rect) {\n\t\treturn this.setValues(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tcontains (x, y, width = 0, height = 0) {\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @param {easeljs.Rectangle} rect The rectangle to calculate a union with.\n\t * @return {easeljs.Rectangle} A new rectangle describing the union.\n\t*/\n\tunion (rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @param {easeljs.Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {easeljs.Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tintersection (rect) {\n\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t}\n\n\t/**\n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @param {easeljs.Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tintersects (rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t}\n\n\t/**\n\t * Returns true if the width or height are equal or less than 0.\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tisEmpty () {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t}\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @return {easeljs.Rectangle} a clone of the Rectangle instance.\n\t */\n\tclone () {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t}\n\n}\n","/**\n * @license Filter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {@link easeljs.DisplayObject#cache} method. If an object changes, please cache it again, or use\n * {@link easeljs.DisplayObject#updateCache}. Note that the filters must be applied before caching.\n *\n * Note that each filter can implement a {@link easeljs.Filter#getBounds} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {@link easeljs.BlurFilter}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul>\n *   <li>{@link easeljs.AlphaMapFilter}: Map a greyscale image to the alpha channel of a display object</li>\n *   <li>{@link easeljs.AlphaMaskFilter}: Map an image's alpha channel to the alpha channel of a display object</li>\n *   <li>{@link easeljs.BlurFilter}: Apply vertical and horizontal blur to a display object</li>\n *   <li>{@link easeljs.ColorFilter}: Color transform a display object</li>\n *   <li>{@link easeljs.ColorMatrixFilter}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @memberof easeljs\n * @example\n * shape.filters = [\n *   new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *   new createjs.BlurFilter(5, 5, 10)\n * ];\n * shape.cache(0, 0, 100, 100);\n */\nexport default class Filter {\n\n\tconstructor () {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @type {easeljs.Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @abstract\n\t * @param {easeljs.Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {easeljs.Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t */\n\tgetBounds (rect) { }\n\n\t/**\n\t * @virtual\n\t * @abstract\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {easeljs.StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) { }\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @return {easeljs.Filter} A clone of the current Filter instance.\n\t */\n\tclone () {\n\t\treturn new Filter();\n\t}\n\n\t/**\n\t * @abstract\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t */\n\t_applyFilter (imageData) { }\n\n}\n","/**\n * @license BitmapCache\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\nimport StageGL from \"../display/StageGL\";\n\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {@link easeljs.DisplayObject#cache}\n * method in {@link easeljs.DisplayObject}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {@link easeljs.DisplayObject#cacheCanvas}.\n *\n * Working with a singular image like a {@link easeljs.Bitmap}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {@link easeljs.Stage#update},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {@link easeljs.Filter}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n */\nexport default class BitmapCache extends Filter {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t\t * with decreased scales can save on rendering performance.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The relative offset of the {@link easeljs.BitmapCache#x} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The relative offset of the {@link easeljs.BitmapCache#y} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t\t * useful to see if a cache has been updated.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.cacheID = 0;\n\n\t\t/**\n\t\t * Relative offset of the x position, used for drawing the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offX.\n\t\t */\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offY.\n\t\t */\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the actual value.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the actual value.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation.\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default easeljs.Rectangle\n\t\t */\n\t\tthis._boundRect = new Rectangle();\n\n\t}\n\n\t/**\n\t * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes bounds.\n\t * @param {easeljs.DisplayObject} target The object to check the filter bounds for.\n\t * @param {easeljs.Rectangle} [output] Calculated bounds will be applied to this rect.\n\t * @return {easeljs.Rectangle}\n\t * @static\n\t */\n\tstatic getFilterBounds (target, output = new Rectangle()) {\n\t\tlet filters = target.filters;\n\t\tlet filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor (let i=0; i<filterCount; i++) {\n\t\t\tlet f = filters[i];\n\t\t\tif (!f || !f.getBounds) { continue; }\n\t\t\tlet test = f.getBounds();\n\t\t\tif (!test) { continue; }\n\t\t\tif (i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Directly called via {@link easeljs.DisplayObject#cache}. Creates and sets properties needed\n\t * for a cache to function, and performs the initial update.\n\t * @param {easeljs.DisplayObject} target The DisplayObject this cache is linked to.\n\t * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t * @param {Number} [width=1] The width of the cache region.\n\t * @param {Number} [height=1] The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t * and rotate cached elements with greater fidelity.\n\t * @param {Object} [options] When using things like {@link easeljs.StageGL} there may be\n\t * extra caching opportunities or requirements.\n\t */\n\tdefine (target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t\tif (!target) { throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis._useWebGL = options !== undefined;\n\t\tthis.target = target;\n\n\t\tthis.width = width >= 1 ? width : 1;\n\t\tthis.height = height >= 1 ? height : 1;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scale = scale;\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Directly called via {@link easeljs.DisplayObject#updateCache}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {@link easeljs.BitmapCache#_updateSurface}\n\t * and {@link easeljs.BitmapCache#_drawToCache} respectively.\n\t * @param {String} [compositeOperation] The DisplayObject this cache is linked to.\n\t */\n\tupdate (compositeOperation) {\n\t\tif (!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tlet filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tlet surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t}\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t */\n\trelease () {\n\t\tlet stage = this.target.stage;\n\t\tif (this._useWebGL && this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT) { this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else if (stage instanceof StageGL) {\n\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t}\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {@link easeljs.BitmapCache#cacheID} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\tlet cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t}\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t */\n\tdraw (ctx) {\n\t\tif (!this.target) { return false; }\n\t\tctx.drawImage(\n\t\t\tthis.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\n\t\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\n\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @returns {easeljs.Rectangle}\n\t */\n\tgetBounds () {\n\t\tconst scale = this.scale;\n\t\treturn this._boundRect.setValue(\n\t\t\tthis._filterOffX/scale,\n\t\t\tthis._filterOffY/scale,\n\t\t\tthis.width/scale,\n\t\t\tthis.height/scale\n\t\t);\n\t}\n\n\t/**\n\t * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t * create and or size the canvas as needed.\n\t * @protected\n\t */\n\t_updateSurface () {\n\t\tlet surface;\n\t\tif (!this._useWebGL) {\n\t\t\tsurface = this.target.cacheCanvas;\n\t\t\t// create it if it's missing\n\t\t\tif (!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\t// skip the webgl-only updates\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t\t\t\t\tthrow `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\t\t\t} else if (this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;    // use this flag to control stage sizing and final output\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tlet stageGL = this._webGLCache;\n\t\tsurface = this.target.cacheCanvas;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else if (!stageGL.isCacheControlled) {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t}\n\t}\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @protected\n\t */\n\t_drawToCache (compositeOperation) {\n\t\tlet target = this.target;\n\t\tlet surface = target.cacheCanvas;\n\t\tlet webGL = this._webGLCache;\n\n\t\tif (!this._useWebGL || !webGL) {\n\t\t\tlet ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(target);\n\t\t\t}\n\t\t\tsurface._invalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n\t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\t\tsurface = this.target.cacheCanvas;\n\t\tsurface.width = this._drawWidth;\n\t\tsurface.height = this._drawHeight;\n\t\tsurface._invalid = true;\n\t}\n\n\t/**\n\t * Work through every filter and apply its individual transformation to it.\n\t * @protected\n\t */\n\t_applyFilters () {\n\t\tlet surface = this.target.cacheCanvas;\n\t\tlet filters = this.target.filters;\n\n\t\tlet w = this._drawWidth;\n\t\tlet h = this._drawHeight;\n\n\t\t// setup\n\t\tlet data = surface.getContext(\"2d\").getImageData(0,0, w,h);\n\n\t\t// apply\n\t\tlet l = filters.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tfilters[i]._applyFilter(data);\n\t\t}\n\n\t\t//done\n\t\tsurface.getContext(\"2d\").putImageData(data, 0,0);\n\t}\n\n}\n\n/**\n * Functionality injected to {@link easeljs.BitmapCache}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n *\n * @name easeljs.BitmapCache#cache\n *\n * @example <caption>WebGL cache with 2d context</caption>\n * let stage = new Stage();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, true); // no StageGL to use, so make one\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @example <caption>WebGL cache with WebGL context</caption>\n * let stageGL = new StageGL();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL); // use our StageGL to cache\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity.\n * @param {Boolean | easeljs.StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n","/**\n * @license DisplayObject\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport uid from \"../utils/uid\";\nimport DisplayProps from \"../geom/DisplayProps\";\nimport Rectangle from \"../geom/Rectangle\";\nimport Point from \"../geom/Point\";\nimport Matrix2D from \"../geom/Matrix2D\";\nimport BitmapCache from \"../filters/BitmapCache\";\n\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {@link easeljs.Container}, {@link easeljs.Bitmap}, and {@link easeljs.Shape}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n *\n * @memberof easeljs\n * @extends EventDispatcher\n */\nexport default class DisplayObject extends EventDispatcher {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t * If a cache is active, this returns the canvas that holds the image of this display object.\n\t\t * Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @see {@link easeljs.DisplayObject#cache}\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties.\n\t\t * @see {@link easeljs.BitmapCache}\n\t\t * @type {easeljs.BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.id = uid();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {@link easeljs.Container} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {@link easeljs.Container#getObjectsUnderPoint}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the `mouseEnabled` property will not work properly with nested Containers.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {@link easeljs.DisplayObject#toString}. Useful for debugging.\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {@link easeljs.Container} or {@link easeljs.Stage} object that\n\t\t * contains this display object, or null if it has not been added to one.\n\t\t * @type {easeljs.Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {@link easeljs.DisplayObject#regY} to 50.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {@link easeljs.DisplayObject#regX} and regY to 50.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @type {easeljs.Shadow}\n\t\t * @default null\n\t\t */\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {@link easeljs.Stage#getObjectsUnderPoint} method.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.x = 0;\n\n\t\t/**\n\t\t * The y (vertical) position of the display object, relative to its parent.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @type {easeljs.Matrix2D}\n\t\t * @default null\n\t\t */\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container.\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when {@link easeljs.Stage#snapToPixelEnabled} is true.\n\t\t * To enable/disable snapping on whole categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {@link easeljs.DisplayObject#cache}\n\t\t * or {@link easeljs.DisplayObject#updateCache} is called on the display object, and only apply to the area that is cached.\n\t\t * @type {Array<easeljs.Filter>}\n\t\t * @default null\n\t\t */\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @type {easeljs.Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {@link easeljs.Container#getObjectsUnderPoint}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t *\n\t\t * If set on a {@link easeljs.Container}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {@link easeljs.DisplayObject#mouseChildren} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {@link easeljs.Stage}.\n\t\t *\n\t\t * @type {easeljs.DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {@link easeljs.Stage#enableMouseOver} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t *\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.DisplayProps}\n\t\t */\n\t\tthis._props = new DisplayProps();\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t */\n\t\tthis._rectangle = new Rectangle();\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\n\t/**\n\t * Returns the {@link easeljs.Stage} instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @type {Stage}\n\t * @readonly\n\t */\n\tget stage () {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tlet o = this;\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) { return o; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Set both the {@link easeljs.DisplayObject#scaleX} and the {@link easeljs.DisplayObject#scaleY} property to the same value.\n\t * Note that when you get the value, if the `scaleX` and `scaleY` are different values, it will return only the `scaleX`.\n\t * @type {Number}\n\t * @default 1\n\t */\n\tset scale (value) { this.scaleX = this.scaleY = value; }\n\tget scale () { return this.scaleX; }\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Alias for drawCache(). Used by grandchildren (or deeper) in their draw method to directly\n\t * call {@link easeljs.DisplayObject#drawCache}, bypassing their parent(s).\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\treturn this.drawCache(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns `true` if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdrawCache (ctx, ignoreCache = false) {\n\t\tlet cache = this.bitmapCache;\n\t\tif (cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {@link easeljs.DisplayObject#draw}.\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t */\n\tupdateContext (ctx) {\n\t\tlet o=this, mask=o.mask, mtx=o._props.matrix;\n\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\n\t\tthis.getMatrix(mtx);\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t}\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling `updateCache()` again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {@link easeljs.Filter} class for more information. Some filters\n\t * (ex. {@link easeljs.BlurFilter}) may not work as expected in conjunction with the scale param.\n\t *\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t *\n\t * @example\n\t * // If you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t * var shape = new createjs.Shape();\n\t * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t * shape.cache(-25, -25, 50, 50);\n\t *\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t */\n\tcache (x, y, width, height, scale = 1, options) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthis.bitmapCache = new BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t}\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t *\n\t * @example\n\t * // clear current graphics\n\t * shapeInstance.clear();\n\t * // draw new instructions\n\t * shapeInstance.setStrokeStyle(3).beginStroke(\"#FF0000\").moveTo(100, 100).lineTo(200,200);\n\t * // update cache, drawing new line on top of old one\n\t * shapeInstance.updateCache();\n\t *\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t */\n\tupdateCache (compositeOperation) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthrow \"No cache found. cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t}\n\n\t/**\n\t * Clears the current cache.\n\t * @see {@link easeljs.DisplayObject.#cache}\n\t */\n\tuncache () {\n\t\tif (this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * @example\n\t * displayObject.x = 300;\n\t * displayObject.y = 200;\n\t * stage.addChild(displayObject);\n\t * let point = displayObject.localToGlobal(100, 100);\n\t * // Results in x=400, y=300\n\t *\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t */\n\tlocalToGlobal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * @example\n\t * displayObject.x = 300;\n\t * displayObject.y = 200;\n\t * stage.addChild(displayObject);\n\t * let point = displayObject.globalToLocal(100, 100);\n\t * // Results in x=-200, y=-100\n\t *\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t */\n\tglobalToLocal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {@link easeljs.DisplayObject#localToGlobal} and {@link easeljs.DisplayObject#globalToLocal}.\n\t *\n\t * @example\n\t * // long way\n\t * let pt = this.localToGlobal(x, y);\n\t * pt = target.globalToLocal(pt.x, pt.y);\n\t * // shorthand\n\t * let pt = this.localToLocal(x, y, target);\n\t *\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {easeljs.DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t */\n\tlocalToLocal (x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t}\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * @example\n\t * displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {easeljs.DisplayObject} Returns this instance. Useful for chaining commands.\n\t*/\n\tsetTransform (x=0, y=0, scaleX=1, scaleY=1, rotation=0, skewX=0, skewY=0, regX=0, regY=0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scaleX = scaleX;\n\t\tthis.scaleY = scaleY;\n\t\tthis.rotation = rotation;\n\t\tthis.skewX = skewX;\n\t\tthis.skewY = skewY;\n\t\tthis.regX = regX;\n\t\tthis.regY = regY;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix object is returned.\n\t * @return {easeljs.Matrix2D} A matrix representing this display object's transform.\n\t */\n\tgetMatrix (matrix) {\n\t\tlet o = this, mtx = matrix&&matrix.identity() || new Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t}\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}). This can\n\t * be used to transform positions between coordinate spaces, such as with {@link easeljs.DisplayObject#localToGlobal}\n\t * and {@link easeljs.DisplayObject#globalToLocal}.\n\t *\n\t * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix2D object is returned.\n\t * @return {easeljs.Matrix2D} The combined matrix.\n\t */\n\tgetConcatenatedMatrix (matrix) {\n\t\tlet o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t}\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}).\n\t * @param {easeljs.DisplayProps} [props] A DisplayProps object to populate with the calculated values. If null, a new DisplayProps object is returned.\n\t * @return {easeljs.DisplayProps} The combined display properties.\n\t */\n\tgetConcatenatedDisplayProps (props) {\n\t\tprops = props ? props.identity() : new DisplayProps();\n\t\tlet o = this, mtx = o.getMatrix(props.matrix);\n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t *\n\t * @example\n\t * stage.addEventListener(\"stagemousedown\", event => {\n\t *   let hit = shape.hitTest(event.stageX, event.stageY);\n\t *   // hit == true when shape is clicked\n\t * });\n\t *\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\thitTest (x, y) {\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tlet hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @example\n\t * let graphics = new Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t * let shape = stage.addChild(new Shape()).set({ graphics, x: 100, y: 100, alpha: 0.5 });\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {easeljs.DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t *\n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {@link easeljs.SpriteSheet#getFrameBounds}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t *\n\t * @example\n\t * /* Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly. *\\/\n\t * let bounds = obj.getBounds();\n\t * obj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * // getBounds will now use the set values, instead of recalculating\n\t *\n\t * @example\n\t * // To reduce memory impact, the returned Rectangle instance may be reused internally\n\t * let bounds = obj.getBounds().clone();\n\t * // OR:\n\t * rect.copy(obj.getBounds());\n\t *\n\t * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetBounds () {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tlet cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tlet scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t *\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t *\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t */\n\tsetBounds (x, y, width, height) {\n\t\tif (x == null) { this._bounds = null; }\n\t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t}\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t *\n\t * @return {easeljs.DisplayObject} A clone of the current DisplayObject instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new DisplayObject());\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {easeljs.DisplayObject} o\n\t */\n\t_cloneProps (o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {easeljs.Shadow} [shadow=Shadow]\n\t */\n\t_applyShadow (ctx, shadow = Shadow.identity) {\n\t\tshadow = shadow;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t */\n\t_tick (evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tlet ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t */\n\t_testHit (ctx) {\n\t\ttry {\n\t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {easeljs.Rectangle}\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Rectangle} bounds\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {easeljs.Rectangle}\n\t */\n\t_transformBounds (bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tlet { x, y, width, height } = bounds;\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tlet x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tlet y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\n\t\tlet minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t}\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @protected\n\t * @return {Boolean}\n\t */\n\t_hasMouseEventListener () {\n\t\tlet evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (let i=0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t}\n\n}\n\n{\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\t/**\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @static\n\t\t */\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\t/**\n\t\t * @type {CanvasRenderingContext2D}\n\t\t * @static\n\t\t */\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @static\n * @type {Array<String>}\n * @readonly\n */\nDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @static\n * @type {Boolean}\n * @default false\n */\nDisplayObject.suppressCrossDomainErrors = false;\n\n/**\n * @static\n * @type {Boolean}\n * @default false\n */\nDisplayObject.snapToPixelEnabled = false;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_NONE = 0;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_SPRITE = 1;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_BITMAP = 2;\n\n/**\n * Dispatched when the user presses their left mouse button over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#click\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user double clicks their left mouse button over this display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#dblclick\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse enters this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollover}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseover\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollout}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseout\n * @since 0.6.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseover}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA and then directly on to shapeB. With a listener for {@link easeljs.DisplayObject#event:mouseover} on\n * myContainer, two events would be received, each targeting a child element:\n * <ol>\n *   <li>when the mouse enters shapeA (target=shapeA)</li>\n *   <li>when the mouse enters shapeB (target=shapeB)</li>\n * </ol>\n * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollover\n * @since 0.7.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseout}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA, then directly on to shapeB, then off both. With a listener for {@link easeljs.DisplayObject#event:mouseout}\n * on myContainer, two events would be received, each targeting a child element:<OL>\n * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n * </OL>\n * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollout\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressmove\n * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n * useful for dragging and similar operations.\n * @event easeljs.DisplayObject#pressmove\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressup event\n * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n * operations.\n * @event easeljs.DisplayObject#pressup\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the display object is added to a parent container.\n * @event easeljs.DisplayObject#added\n */\n\n/**\n * Dispatched when the display object is removed from its parent container.\n * @event easeljs.DisplayObject#removed\n */\n\n/**\n * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n * rendering (draw) pass. When {@link easeljs.Stage#update} is called, first all display objects on\n * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n * tick event dispatched in order of their depth prior to the event being dispatched on their parent.\n * @event easeljs.DisplayObject#tick\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Array} params An array containing any arguments that were passed to the Stage.update() method.\n * @since 0.6.0\n */\n","/**\n * @license Container\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\n\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their `transform` and `alpha` properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with `x=50`\n * and `alpha=0.7` will be rendered to the canvas at `x=150` and `alpha=0.35`.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * import { Container } from \"@createjs/easeljs\";\n * const container = new Container();\n * container.addChild(bitmapInstance, shapeInstance);\n * container.x = 100;\n */\nexport default class Container extends DisplayObject {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {@link easeljs.Container#addChild}, {@link easeljs.Container#removeChild}, {@link easeljs.Container#swapChildren},\n\t\t * etc, rather than accessing this directly, but it is included for advanced uses.\n\t\t * @type {Array}\n\t\t * @default []\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.tickChildren = true;\n\t}\n\n\t/**\n\t * Returns the number of children in the container.\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget numChildren () {\n\t\treturn this.children.length;\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tlet list = this.children.slice();\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tlet child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * @example\n\t * container.addChild(bitmapInstance);\n\t * // You can also add multiple children at once:\n\t * container.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t * @return {easeljs.DisplayObject} The child that was added, or the last child if multiple children were added.\n\t */\n\taddChild (...children) {\n\t\tconst l = children.length;\n\t\tif (l === 0) { return null; }\n\t\tlet child = children[0];\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { child = this.addChild(children[i]); }\n\t\t\treturn child;\n\t\t}\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this container.\n\t *\n\t * @example\n\t * container.addChildAt(child1, index);\n\t * // You can also add multiple children, such as:\n\t * container.addChildAt(child1, child2, ..., index);\n\t * // The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list, you could use:\n\t * container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t * // This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {easeljs.DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t */\n\taddChildAt (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return null; }\n    let index = children.pop();\n\t\tif (index < 0 || index > this.children.length) { return children[l - 2]; }\n\t\tif (l > 2) {\n\t\t\tfor (let i = 0; i < l - 1; i++) { this.addChildAt(children[i], index++); }\n\t\t\treturn children[l - 2];\n\t\t}\n\t\tlet child = children[0];\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index++, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * @example\n\t * container.removeChild(child);\n\t * // You can also remove multiple children:\n\t * container.removeChild(child1, child2, ...);\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t */\n\tremoveChild (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeChild(children[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n\t}\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * @example\n\t * container.removeChildAt(2);\n\t * // You can also remove multiple children:\n\t * container.removeChildAt(2, 7, ...)\n\t *\n\t * @param {...Number} indexes The indexes of children to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t */\n\tremoveChildAt (...indexes) {\n\t\tconst l = indexes.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tindexes.sort((a, b) => b - a);\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this._removeChildAt(indexes[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(indexes[0]);\n\t}\n\n\t/**\n\t * Removes all children from the display list.\n\t */\n\tremoveAllChildren () {\n\t\tlet kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t}\n\n\t/**\n\t * Returns the child at the specified index.\n\t * @param {Number} index The index of the child to return.\n\t * @return {easeljs.DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t */\n\tgetChildAt (index) {\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @param {String} name The name of the child to return.\n\t * @return {easeljs.DisplayObject} The child with the specified name.\n\t */\n\tgetChildByName (name) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (kids[i].name === name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * @example\n\t * // Display children with a higher y in front.\n\t * container.sortChildren((obj1, obj2, options) => {\n\t * \t if (obj1.y > obj2.y) { return 1; }\n\t *   if (obj1.y < obj2.y) { return -1; }\n\t *   return 0;\n\t * });\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n\t * @param {Function} sortFunction the function to use to sort the child list.\n\t */\n\tsortChildren (sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t}\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t * @param {easeljs.DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t */\n\tgetChildIndex (child) {\n\t\treturn this.children.indexOf(child);\n\t}\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t */\n\tswapChildrenAt (index1, index2) {\n\t\tlet kids = this.children;\n\t\tlet o1 = kids[index1];\n\t\tlet o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @param {easeljs.DisplayObject} child1\n\t * @param {easeljs.DisplayObject} child2\n\t */\n\tswapChildren (child1, child2) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tlet index1,index2;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child1) { index1 = i; }\n\t\t\tif (kids[i] === child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i === l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t}\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {easeljs.DisplayObject} child\n\t * @param {Number} index\n\t */\n\tsetChildIndex (child, index) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child) { break; }\n\t\t}\n\t\tif (i === l || i === index) { return; }\n\t\tkids.splice(i, 1);\n\t\tkids.splice(index, 0, child);\n\t}\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @param {easeljs.DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t */\n\tcontains (child) {\n\t\twhile (child) {\n\t\t\tif (child === this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t */\n\thitTest (x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn this.getObjectUnderPoint(x, y) != null;\n\t}\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {@link easeljs.DisplayObject#mouseEnabled} set to `false`.\n\t * The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {@link easeljs.DisplayObject#event:mousemove}),\n\t * and only if the mouse's position has changed.\n\t *\n\t * <ul>\n\t *   <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *   <li>By setting the `mode` parameter to `1`, the {@link easeljs.DisplayObject#mouseEnabled}\n\t *       and {@link easeljs.DisplayObject#mouseChildren} properties will be respected.</li>\n\t *   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t *       listeners or a {@link easeljs.DisplayObject#cursor} property. That is, only objects\n\t *       that would normally intercept mouse interaction will be included. This can significantly improve performance\n\t *       in some cases by reducing the number of display objects that need to be tested.</li>\n\t * </ul>\n\t *\n\t * This method accounts for both {@link easeljs.DisplayObject#hitArea} and {@link easeljs.DisplayObject#mask}.\n\t *\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array<easeljs.DisplayObject>} An array of DisplayObjects under the specified coordinates.\n\t */\n\tgetObjectsUnderPoint (x, y, mode = 0) {\n\t\tlet arr = [];\n\t\tlet pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Similar to {@link easeljs.Container#getObjectsUnderPoint}, but returns only the top-most display\n\t * object. This runs significantly faster than `getObjectsUnderPoint()`, but is still potentially an expensive\n\t * operation.\n\t *\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {easeljs.DisplayObject} The top-most display object under the specified coordinates.\n\t */\n\tgetObjectUnderPoint (x, y, mode = 0) {\n\t\tlet pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t}\n\n\tgetBounds () {\n\t\treturn this._getBounds(null, true);\n\t}\n\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example `.parent`).\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {easeljs.Container} A clone of the current Container instance.\n\t */\n\tclone (recursive = false) {\n\t\tlet o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t}\n\n\t_tick (evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\tlet child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @protected\n\t * @param {easeljs.Container} o The target container.\n\t */\n\t_cloneChildren (o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tlet arr = o.children;\n\t\tconst l = this.children.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t}\n\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   *\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent=false] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   */\n  _removeChildAt (index, silent = false) {\n\t\tif (index < 0 || index > this.children.length - 1) { return false; }\n\t\tlet child = this.children[index];\n\t\tif (child) { child.parent = null; }\n\t\tthis.children.splice(index, 1);\n\t\tif (!silent) { child.dispatchEvent(\"removed\"); }\n\t\treturn true;\n  }\n\n\t/**\n\t * @protected\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t * @return {easeljs.DisplayObject}\n\t */\n\t_getObjectsUnderPoint (x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tlet mtx, ctx = DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse && this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tlet children = this.children;\n\t\tconst l = children.length;\n\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\tlet child = children[i];\n\t\t\tlet hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tlet result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tlet props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea || child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t */\n\t_testMask (target, x, y) {\n\t\tlet mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n\t\tlet mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {easeljs.Rectangle}\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = super.getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tconst l = this.children.length;\n\t\tlet rect = null;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t}\n\n}\n","/**\n * @license MouseEvent\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {@link easeljs.DisplayObject} and {@link easeljs.Stage} event listings.\n * @memberof easeljs\n * @extends core.Event\n * @param {String} type The event type.\n * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n * @param {Number} stageX The normalized x position relative to the stage.\n * @param {Number} stageY The normalized y position relative to the stage.\n * @param {easeljs.MouseEvent} nativeEvent The native DOM event related to this mouse event.\n * @param {Number} pointerID The unique id for the pointer.\n * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n * @param {Number} rawX The raw x position relative to the stage.\n * @param {Number} rawY The raw y position relative to the stage.\n * @param {easeljs.DisplayObject} relatedTarget The secondary target for the event.\n */\nexport default class MouseEvent extends Event {\n\n\tconstructor (type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tsuper(type, bubbles, cancelable);\n\n// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @type {HTMLMouseEvent}\n\t\t */\n\t\tthis.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t *\n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @type {easeljs.DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localX () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t}\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localY () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t}\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tget isTouch () {\n\t\treturn this.pointerID !== -1;\n\t}\n\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @return {easeljs.MouseEvent} a clone of the MouseEvent instance.\n\t */\n\tclone () {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t}\n\n}\n","/**\n * @license Stage\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport MouseEvent from \"../events/MouseEvent\";\n\n/**\n * A stage is the root level {@link easeljs.Container} for a display list. Each time its {@link easeljs.Stage#tick}\n * method is called, it will render its display list to its target canvas.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n * @example\n * let stage = new Stage(\"canvasElementId\");\n * let image = new Bitmap(\"imagePath.png\");\n * stage.addChild(image);\n * Ticker.addEventListener(\"tick\", event => {\n *   image.x += 10;\n * \t stage.update();\n * });\n *\n * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n * of a canvas object in the current document.\n */\nexport default class Stage extends Container {\n\n\tconstructor (canvas) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to `false`\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * @example\n\t\t * let stage = new Stage(\"canvasId\");\n\t\t * stage.autoClear = false;\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected.\n\t\t *\n\t\t * @example\n\t\t * stage.enableDOMEvents(false);\n\t\t * stage.canvas = anotherCanvas;\n\t\t * stage.enableDOMEvents(true);\n\t\t *\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t */\n\t\tthis.canvas = (typeof canvas === \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @type {easeljs.Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the {@link easeljs.DisplayObject.snapToPixelEnabled}\n\t\t * property of display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas.\n\t\t * See {@link easeljs.Stage#mouseInBounds}, and {@link easeljs.MouseEvent} x/y/rawX/rawY.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @override\n\t\t * @default null\n\t\t * @private\n\t\t */\n\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Stage}\n\t\t */\n\t\tthis._nextStage = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Stage}\n\t\t */\n\t\tthis._prevStage = null;\n\n\t\tthis.enableDOMEvents(true);\n\t}\n\n\t/**\n\t * Specifies a target stage that will have mouse/touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through.\n\t *\n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:\n\t * <ol>\n\t *   <li> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</li>\n\t *   <li> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</li>\n\t *   <li> All relay targets will share the frequency value of the top-most stage</li>\n\t * </ol>\n\t *\n\t * @example <caption>Relay mouse events from topStage to bottomStage</caption>\n\t * topStage.nextStage = bottomStage;\n\t *\n\t * @example <caption>Disable DOM events</caption>\n\t * stage.enableDOMEvents(false);\n\t *\n\t * @type {easeljs.Stage}\n\t */\n\tget nextStage () { return this._nextStage; }\n\tset nextStage (stage) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (stage) { stage._prevStage = this; }\n\t\tthis._nextStage = stage;\n\t}\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {@link easeljs.Stage#tick}\n\t * unless {@link easeljs.Stage#tickOnupdate} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {@link core.Ticker} event object, or similar object with a delta property.\n\t */\n\tupdate (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tlet r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t}\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {@link easeljs.Stage#update}\n\t * unless {@link easeljs.Stage#tickOnUpdate} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {@link easeljs.Sprite#framerate} require that\n\t * a {@link core.Ticker#event:tick} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`.\n\t *\n\t * @example\n\t * Ticker.on(\"tick\", (evt) => {\n\t *   // clone the event object from Ticker, and add some custom data to it:\n\t * \t let data = evt.clone().set({ greeting: \"hello\", name: \"world\" });\n\t * \t // pass it to stage.update():\n\t * \t stage.update(data); // subsequently calls tick() with the same param\n\t * });\n\t *\n\t * shape.on(\"tick\", (evt) => {\n\t *   console.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t console.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * });\n\t *\n\t * @emits easeljs.Stage#event:tickstart\n\t * @emits easeljs.Stage#event:tickend\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t */\n\ttick (props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tlet evtObj = new Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (let n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t}\n\n\t/**\n\t * Default event handler that calls the Stage {@link easeljs.Stage#update} method when a {@link easeljs.DisplayObject#event:tick}\n\t * event is received. This allows you to register a Stage instance as a event listener on {@link core.Ticker} directly.\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of `delta` and `paused` parameters.\n\t */\n\thandleEvent (evt) {\n\t\tif (evt.type === \"tick\") { this.update(evt); }\n\t}\n\n\t/**\n\t * Clears the target canvas. Useful if {@link easeljs.State#autoClear} is set to `false`.\n\t */\n\tclear () {\n\t\tif (!this.canvas) { return; }\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t}\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t *\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t */\n\ttoDataURL (backgroundColor, mimeType = \"image/png\") {\n\t\tlet data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tlet dataURL = this.canvas.toDataURL(mimeType);\n\n\t\tif (backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t}\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over {@link easeljs.DisplayObject#event:mouseover}\n\t * and {@link easeljs.DisplayObject#event:mouseout} and roll over events {@link easeljs.DisplayObject#event:rollover}\n\t * and {@link easeljs.DisplayObject#event:rollout} for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * @example\n\t * const stage = new Stage(\"canvasId\");\n\t * stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t */\n\tenableMouseOver (frequency = 20) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency === 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency <= 0) { return; }\n\t\tthis._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000/Math.min(50,frequency));\n\t}\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected.\n\t *\n\t * @example\n\t * stage.enableDOMEvents(false);\n\t * stage.canvas = anotherCanvas;\n\t * stage.enableDOMEvents(true);\n\t *\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events.\n\t */\n\tenableDOMEvents (enable = true) {\n\t\tlet ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tlet t = window.addEventListener ? window : document;\n\t\t\tls = this._eventListeners = {\n\t\t\t\tmouseup: {t, f:e => this._handleMouseUp(e) },\n\t\t\t\tmousemove: {t, f:e => this._handleMouseMove(e) },\n\t\t\t\tdblclick: {t:this.canvas, f:e => this._handleDoubleClick(e) },\n\t\t\t\tmousedown: {t:this.canvas, f:e => this._handleMouseDown(e) }\n\t\t\t};\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @throws Stage cannot be cloned\n\t * @override\n\t */\n\tclone () {\n\t\tthrow \"Stage cannot be cloned.\";\n\t}\n\n\t/**\n\t * @protected\n\t * @param {HTMLElement} e\n\t * @returns {Object}\n\t */\n\t_getElementRect (e) {\n\t\tlet bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top:e.offsetTop, left:e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tlet offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tlet offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tlet styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\t\tlet padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tlet padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tlet padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tlet padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t};\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Number} id\n\t * @returns {Object}\n\t */\n\t_getPointerData (id) {\n\t\tlet data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0, y:0}; }\n\t\treturn data;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} [e=window.event]\n\t */\n\t_handleMouseMove (e = window.event) {\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:mouseleave}\n\t * @emits {@link easeljs.DisplayObject#event:mouseenter}\n\t * @emits {@link easeljs.DisplayObject#event:pressmove}\n\t * @emits {@link easeljs.Stage#event:stagemousemove}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerMove (id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tlet nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tlet inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds === !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t */\n\t_updatePointerPosition (id, e, pageX, pageY) {\n\t\tlet rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tlet w = this.canvas.width;\n\t\tlet h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tlet o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t */\n\t_handleMouseUp (e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.Stage#event:stagemouseup}\n\t * @emits {@link easeljs.DisplayObject#event:click}\n\t * @emits {@link easeljs.DisplayObject#event:pressup}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Boolean} clear\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerUp (id, e, clear, owner) {\n\t\tlet nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n\t\tif (target === oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t */\n\t_handleMouseDown (e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.Stage#event:stagemousedown}\n\t * @emits {@link easeljs.DisplayObject#event:mousedown}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerDown (id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tlet target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:mouseout}\n\t * @emits {@link easeljs.DisplayObject#event:rollout}\n\t * @emits {@link easeljs.DisplayObject#event:rollover}\n\t * @emits {@link easeljs.DisplayObject#event:mouseover}\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {easeljs.Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t */\n\t_testMouseOver (clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tlet o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds)) { return; }\n\n\t\tlet e = o.posEvtObj;\n\t\tlet isEventTarget = eventTarget || e&&(e.target === this.canvas);\n\t\tlet target=null, common = -1, cursor=\"\";\n\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tlet oldList = this._mouseOverTarget||[];\n\t\tlet oldTarget = oldList[oldList.length-1];\n\t\tlet list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tlet t = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:dblclick}\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handleDoubleClick (e, owner) {\n\t\tlet target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {easeljs.MouseEvent} [nativeEvent]\n\t * @param {easeljs.DisplayObject} [relatedTarget]\n\t */\n\t_dispatchMouseEvent (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tlet pt = this._mtx.transformPoint(o.x, o.y);\n\t\tlet evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tlet evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t}\n\n}\n\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousemove\n * @since 0.6.0\n */\n/**\n * Dispatched when the user presses their left mouse button on the canvas.\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousedown\n * @since 0.6.0\n */\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemouseup\n * @since 0.6.0\n */\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseleave\n * @since 0.7.0\n */\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseenter\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event easeljs.Stage#tickstart\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event easeljs.Stage#tickend\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event easeljs.Stage#drawstart\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event easeljs.Stage#drawend\n * @since 0.7.0\n */\n","/**\n * @license Canvas\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for creating canvases.\n * @memberof easeljs\n * @name easeljs.createCanvas\n * @param {Number} [width=1]\n * @param {Number} [height=1]\n */\nexport default function createCanvas(width = 1, height = 1) {\n\tlet c;\n\tif (window.createjs !== undefined && window.createjs.createCanvas !== undefined) {\n\t\tc = window.createjs.createCanvas();\n\t}\n\n\tif (c === undefined) {\n\t\tc = document.createElement('canvas');\n\t}\n\n\tif (c !== undefined) {\n\t\tc.width = width;\n\t\tc.height = height;\n\t\treturn c;\n\t}\n\n\tthrow 'Canvas not supported in this environment.';\n}\n","/**\n * @license VideoBuffer\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2010 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport createCanvas from \"./Canvas\";\n\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * @example\n * let buffer = new VideoBuffer(video);\n * let bitmap = new Bitmap(buffer);\n *\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n */\nexport default class VideoBuffer {\n\n  constructor (video) {\n\n  \t/**\n  \t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n  \t * @protected\n  \t * @type {Number}\n  \t */\n  \tthis.readyState = video.readyState;\n\n  \t/**\n  \t * @protected\n  \t * @type {HTMLVideoElement}\n  \t */\n  \tthis._video = video;\n\n  \t/**\n  \t * @protected\n  \t * @type {HTMLCanvasElement}\n  \t */\n  \tthis._canvas = null;\n\n  \t/**\n  \t * @protected\n  \t * @type {Number}\n  \t * @default -1\n  \t */\n  \tthis._lastTime = -1;\n\n  \tif (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    }\n    // {once: true} isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {@link easeljs.Bitmap}.\n   */\n  getImage () {\n  \tif (this.readyState < 2) { return; }\n  \tlet canvas = this._canvas, video = this._video;\n  \tif (!canvas) {\n\t\t\tcanvas = this._canvas = createCanvas();\n  \t\tcanvas.width = video.videoWidth;\n  \t\tcanvas.height = video.videoHeight;\n  \t}\n  \tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n  \t\tconst ctx = canvas.getContext(\"2d\");\n  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \t\tthis._lastTime = video.currentTime;\n  \t}\n  \treturn canvas;\n  }\n\n  /**\n   * @protected\n   */\n  _videoReady () {\n  \tthis.readyState = 2;\n  }\n\n}\n","/**\n * @license Bitmap\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\nimport VideoBuffer from \"../utils/VideoBuffer\";\n\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {@link easeljs.VideoBuffer} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * const bitmap = new Bitmap(\"imagePath.jpg\");\n *\n * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n * If the latter, a new Image instance with the URL as its src will be used.\n */\nexport default class Bitmap extends DisplayObject {\n\n\tconstructor (imageOrUri) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type {CanvasImageSource | Object}\n\t\t */\n\t\tif (typeof imageOrUri === \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t}\n\n\tisVisible () {\n\t\tlet image = this.image;\n\t\tlet hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tlet img = this.image, rect = this.sourceRect;\n\t\tif (img instanceof VideoBuffer) { img = img.getImage(); }\n\t\tif (img == null) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#cache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#updateCache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#uncache\n\t */\n\n\tgetBounds () {\n\t\tlet rect = super.getBounds();\n\t\tif (rect) { return rect; }\n\t\tlet image = this.image, o = this.sourceRect || image;\n\t\tlet hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t}\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t * @return {easeljs.Bitmap} A clone of the Bitmap instance.\n\t */\n\tclone (node) {\n\t\tlet img = this.image;\n\t\tif (img != null && node != null) { img = img.cloneNode(); }\n\t\tlet bmp = new Bitmap(img);\n\t\tif (this.sourceRect) { bmp.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(bmp);\n\t\treturn bmp;\n\t}\n\n}\n","/**\n * @license Sprite\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let sprite = new Sprite(spriteSheet);\n * sprite.gotoAndStop(\"frameName\");\n *\n * Until {@link easeljs.Sprite#gotoAndStop} or {@link easeljs.Sprite#gotoAndPlay} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @see {@link easeljs.SpriteSheet \"More information on setting up frames and animations.\"}\n * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n * dimensions, and frame data.\n * @param {String | Number} [frameOrAnimation] The frame number or animation to play initially.\n */\nexport default class Sprite extends DisplayObject {\n\n\tconstructor (spriteSheet, frameOrAnimation) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {@link easeljs.SpriteSheet}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting `currentFrame`.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\n\t\t * @type {easeljs.SpriteSheet}\n\t\t * @readonly\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t * This could be a non-integer value if using time-based playback, or if the animation's speed is not an integer.\n\t\t * @see {@link easeljs.Sprite#framerate}\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {@link easeljs.Stage#update}.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = 0;\n\n\t\t/**\n\t\t * Current animation object.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) {\n\t\t\tthis.gotoAndPlay(frameOrAnimation);\n\t\t}\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tlet o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tlet rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#cache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#updateCache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#uncache\n\t */\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {@link easeljs.Sprite#stop}\n\t * or {@link easeljs.Sprite#gotoAndStop} is called. Single frame animations will remain unchanged.\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {@link easeljs.Sprite#gotoAndPlay} is called.\n\t * Note that calling `gotoAndPlay()` or {@link easeljs.Sprite#play} will resume playback.\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t */\n\tgotoAndPlay (frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t */\n\tgotoAndStop (frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t*/\n\tadvance (time) {\n\t\tlet fps = this.framerate || this.spriteSheet.framerate;\n\t\tlet t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t}\n\n\t/**\n\t * Returns a {@link easeljs.Rectangle} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with `regX=50` and `regY=40` would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * @see {@link easeljs.SpriteSheet#frameBounds}\n\t * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetBounds () {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t}\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned instances.\n\t * @return {easeljs.Sprite} a clone of the Sprite instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t}\n\n\t/**\n\t * @param {easeljs.Sprite} o\n\t * @return {easeljs.Sprite} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t}\n\n\t_tick (evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @param {Number} [frameDelta=0]\n\t */\n\t_normalizeFrame (frameDelta = 0) {\n\t\tlet animation = this._animation;\n\t\tlet paused = this.paused;\n\t\tlet frame = this._currentFrame;\n\n\t\tif (animation) {\n\t\t\tlet speed = animation.speed || 1;\n\t\t\tlet animFrame = this.currentAnimationFrame;\n\t\t\tlet l = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tlet next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tlet l = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {@link easlejs.Sprite#stop},\n\t * {@link easeljs.Sprite#gotoAndPlay}, etc.)\n\t * @param animation\n\t * @param frame\n\t * @param paused\n\t * @param next\n\t * @param end\n\t * @private\n\t */\n\t_dispatchAnimationEnd (animation, frame, paused, next, end) {\n\t\tlet name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tlet evt = new Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tlet changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @param {String | Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Number} [frame=0] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t */\n\t_goto (frameOrAnimation, frame = 0) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tlet data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t}\n\n}\n\n/**\n * Dispatched when an animation reaches its ends.\n * @event easeljs.Sprite#animationend\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {String} name The name of the animation that just ended.\n * @property {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event easeljs.Sprite#change\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n */\n","/**\n * @license BitmapText\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Container from \"./Container\";\nimport Sprite from \"./Sprite\";\n\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {@link easeljs.BitmapText#spriteSheet} property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n *\n * @param {String} [text=\"\"] The text to display.\n * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n */\nexport default class BitmapText extends Container {\n\n\tconstructor (text = \"\", spriteSheet = null) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text to display.\n\t\t * @type {String}\n\t\t * @default \"\"\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character.\n\t\t *\n\t\t * @example\n\t\t * // the following animation definition would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character.\n\t\t * \"A\": {frames: [0]}\n\t\t * // The short form is also acceptable:\n\t\t * \"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * @see {@link easeljs.SpriteSheet}\n\t\t * @type {easeljs.SpriteSheet}\n\t\t * @default null\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.spaceWidth = 0;\n\n\t \t/**\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @type {easeljs.Stage}\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @type {Function}\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\tif (this.drawCache(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t}\n\n\tgetBounds () {\n\t\tthis._updateText();\n\t\treturn super.getBounds();\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t}\n\n\tclone () {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\taddChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\taddChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveAllChildren () {}\n\n\t_updateState () {\n\t\tthis._updateText();\n\t}\n\n \t/**\n\t * @param {easeljs.BitmapText} o\n\t * @return {easeljs.BitmapText}\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @param {String} character\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getFrameIndex (character, spriteSheet) {\n\t\tlet c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t}\n\n\t/**\n\t * @param {String} character\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t */\n\t_getFrame (character, spriteSheet) {\n\t\tlet index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t}\n\n\t/**\n\t * @param {easeljs.SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getLineHeight (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t}\n\n\t/**\n\t * @param {easeljs.SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getSpaceWidth (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_updateText () {\n\t\tlet x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n\t\tlet pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n\t\tfor (let n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\n\t\tlet hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\n\t\tfor (let i = 0, l = this.text.length; i < l; i++) {\n\t\t\tlet character = this.text.charAt(i);\n\t\t\tif (character === \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n\t\t\t\tif (character === \"\\r\" && this.text.charAt(i+1) === \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t}\n\n}\n\n/**\n * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n * retained, slightly increasing memory use, but reducing instantiation.\n * @type {Number}\n * @static\n * @default 100\n */\nBitmapText.maxPoolSize = 100;\n/**\n * Sprite object pool.\n * @type {Array}\n * @static\n * @private\n * @readonly\n */\nBitmapText._spritePool = [];\n","/**\n * @license DOMElement\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\nimport DisplayProps from \"../geom/DisplayProps\";\n\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @memberof easeljs\n * @extends DisplayObject\n * @param {HTMLElement | String} htmlElement A reference or id for the DOM element to manage.\n */\nexport default class DOMElement extends DisplayObject {\n\n\tconstructor (htmlElement) {\n\t\tsuper();\n\n\t\tif (typeof htmlElement === \"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\n\t\tlet style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\n\t\t/**\n\t\t * @type {easeljs.Matrix2D}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @type {easeljs.Stage}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @type {Function}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\n\tisVisible () {\n\t\treturn this.htmlElement != null;\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tcache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tuncache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tupdateCache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\thitTest () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tlocalToGlobal () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tglobalToLocal () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tlocalToLocal () {}\n\n\t/**\n\t * DOMElement cannot be cloned.\n\t * @throws DOMElement cannot be cloned\n\t */\n\tclone () {\n\t\tthrow \"DOMElement cannot be cloned.\";\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tif (stage != null && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @param {core.Event} evt\n\t * @protected\n\t */\n\t_handleDrawEnd (evt) {\n\t\tlet o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tlet style = o.style;\n\n\t\tlet props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n\t\tlet visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\n\t\tlet oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tlet n = 10000; // precision\n\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tlet str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t}\n\n}\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mousedown\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mouseover\n */\n\n/**\n * Disabled in DOMElement.\n * @event easeljs.DOMElement#tick\n */\n","/**\n * @license Graphics\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport createCanvas from \"../utils/Canvas\";\n\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {@link easeljs.Graphics#draw}\n * directly, or it can be used with the {@link easeljs.Shape} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {@link easeljs.Graphics#append}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{@link easeljs.Graphics#moveTo}</td>\n *     <td>lt</td> <td>{@link easeljs.Graphics#lineTo}</td></tr>\n *     <tr><td>a/at</td><td>{@link easeljs.Graphics#arc} / {@link easeljs.Graphics#arcTo}</td>\n *     <td>bt</td><td>{@link easeljs.Graphics#bezierCurveTo}</td></tr>\n *     <tr><td>qt</td><td>{@link easeljs.Graphics#quadraticCurveTo} (also curveTo)</td>\n *     <td>r</td><td>{@link easeljs.Graphics#rect}</td></tr>\n *     <tr><td>cp</td><td>{@link easeljs.Graphics#closePath}</td>\n *     <td>c</td><td>{@link easeljs.Graphics#clear}</td></tr>\n *     <tr><td>f</td><td>{@link easeljs.Graphics#beginFill}</td>\n *     <td>lf</td><td>{@link easeljs.Graphics#beginLinearGradientFill}</td></tr>\n *     <tr><td>rf</td><td>{@link easeljs.Graphics#beginRadialGradientFill}</td>\n *     <td>bf</td><td>{@link easeljs.Graphics#beginBitmapFill}</td></tr>\n *     <tr><td>ef</td><td>{@link easeljs.Graphics#endFill}</td>\n *     <td>ss / sd</td><td>{@link easeljs.Graphics#setStrokeStyle} / {@link easeljs.Graphics#setStrokeDash}</td></tr>\n *     <tr><td>s</td><td>{@link easeljs.Graphics#beginStroke}</td>\n *     <td>ls</td><td>{@link easeljs.Graphics#beginLinearGradientStroke}</td></tr>\n *     <tr><td>rs</td><td>{@link easeljs.Graphics#beginRadialGradientStroke}</td>\n *     <td>bs</td><td>{@link easeljs.Graphics#beginBitmapStroke}</td></tr>\n *     <tr><td>es</td><td>{@link easeljs.Graphics#endStroke}</td>\n *     <td>dr</td><td>{@link easeljs.Graphics#drawRect}</td></tr>\n *     <tr><td>rr</td><td>{@link easeljs.Graphics#drawRoundRect}</td>\n *     <td>rc</td><td>{@link easeljs.Graphics#drawRoundRectComplex}</td></tr>\n *     <tr><td>dc</td><td>{@link easeljs.Graphics#drawCircle}</td>\n *     <td>de</td><td>{@link easeljs.Graphics#drawEllipse}</td></tr>\n *     <tr><td>dp</td><td>{@link easeljs.Graphics#drawPolyStar}</td>\n *     <td>p</td><td>{@link easeljs.Graphics#decodePath}</td></tr>\n * </table>\n *\n * @example\n * var g = new createjs.Graphics();\n * g.setStrokeStyle(1);\n * g.beginStroke(\"#000000\");\n * g.beginFill(\"red\");\n * g.drawCircle(0,0,30);\n *\n * @example\n * // All drawing methods in Graphics return the Graphics instance, so they can be chained together.\n * graphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * @example\n * // Each graphics API call generates a command object (see below). The last command to be created can be accessed via .command\n * let fillCommand = graphics.beginFill(\"red\").command;\n * fillCommand.style = \"blue\";\n * // or change it to a bitmap fill:\n * fillCommand.bitmap(img);\n *\n * @example\n * // For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly.\n * // In this case, you need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n * // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n * graphics.append(Graphics.beginCmd);\n * // we need to define the path before applying the fill:\n * let circle = new Graphics.Circle(0,0,30);\n * graphics.append(circle);\n * // fill the path we just defined:\n * let fill = new Graphics.Fill(\"red\");\n * graphics.append(fill);\n *\n * // These approaches can be used together, for example to insert a custom command:\n * graphics.beginFill(\"red\");\n * let customCommand = new CustomSpiralCommand(etc);\n * graphics.append(customCommand);\n * graphics.beginFill(\"blue\");\n * graphics.drawCircle(0, 0, 30);\n *\n * @example <caption>Using the Tiny API</caption>\n * graphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @see {@link easeljs.Graphics#append}\n * @memberof easeljs\n */\nexport default class Graphics {\n\n\tconstructor () {\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * @example\n\t\t * let fill = graphics.beginFill(\"red\").command;\n\t\t * // update color later:\n\t\t * fill.style = \"yellow\";\n\t\t *\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.Stroke}\n\t\t */\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeStyle}\n\t\t */\n\t\tthis._strokeStyle = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeStyle}\n\t\t */\n\t\tthis._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeDash}\n\t\t */\n\t\tthis._strokeDash = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeDash}\n\t\t */\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.Fill}\n\t\t */\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._storeIndex = 0;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript `curveTo()` method to the functionally similar {@link easeljs.Graphics#quadraticCurveTo} method.\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.curveTo = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript `drawRect()` method to the functionally similar {@link easeljs.Graphics#rect} method.\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.drawRect = this.rect;\n\n\t\t// tiny api\n\t\tthis.mt = this.moveTo;\n\t\tthis.lt = this.lineTo;\n\t\tthis.at = this.arcTo;\n\t\tthis.bt = this.bezierCurveTo;\n\t\tthis.qt = this.quadraticCurveTo;\n\t\tthis.a = this.arc;\n\t\tthis.r = this.rect;\n\t\tthis.cp = this.closePath;\n\t\tthis.c = this.clear;\n\t\tthis.f = this.beginFill;\n\t\tthis.lf = this.beginLinearGradientFill;\n\t\tthis.rf = this.beginRadialGradientFill;\n\t\tthis.bf = this.beginBitmapFill;\n\t\tthis.ef = this.endFill;\n\t\tthis.ss = this.setStrokeStyle;\n\t\tthis.sd = this.setStrokeDash;\n\t\tthis.s = this.beginStroke;\n\t\tthis.ls = this.beginLinearGradientStroke;\n\t\tthis.rs = this.beginRadialGradientStroke;\n\t\tthis.bs = this.beginBitmapStroke;\n\t\tthis.es = this.endStroke;\n\t\tthis.dr = this.drawRect;\n\t\tthis.rr = this.drawRoundRect;\n\t\tthis.rc = this.drawRoundRectComplex;\n\t\tthis.dc = this.drawCircle;\n\t\tthis.de = this.drawEllipse;\n\t\tthis.dp = this.drawPolyStar;\n\t\tthis.p = this.decodePath;\n\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param.\n\t *\n\t * @example\n\t * Graphics.getRGB(50, 100, 150, 0.5); // rgba(50,100,150,0.5)\n\t * Graphics.getRGB(0xFF00FF, 0.2); // rgba(255,0,255,0.2)\n\t *\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t */\n\tstatic getRGB (r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn `rgb(${r},${g},${b})`;\n\t\t} else {\n\t\t\treturn `rgba(${r},${g},${b},${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t * @example\n\t * Graphics.getHSL(150, 100, 70); // hsl(150,100,70)\n\t *\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t */\n\tstatic getHSL (hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t\t} else {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget instructions () {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t}\n\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t */\n\tisEmpty () {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t */\n\tdraw (ctx, data) {\n\t\tthis._updateInstructions();\n\t\tlet instr = this._instructions;\n\t\tconst l = instr.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t}\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for `DisplayObject.mask` to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t */\n\tdrawAsPath (ctx) {\n\t\tthis._updateInstructions();\n\t\tlet instr, instrs = this._instructions;\n\t\tconst l = instrs.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t}\n\n\t/**\n\t * Moves the drawing point to the specified position.\n\t * A tiny API method \"mt\" also exists.\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t */\n\tmoveTo (x, y) {\n\t\treturn this.append(new MoveTo(x,y), true);\n\t}\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {@link easeljs.Graphics#moveTo} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths) \"WHATWG spec\"}\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tlineTo (x, y) {\n\t\treturn this.append(new LineTo(x,y));\n\t}\n\n\t/**\n\t * Draws an arc with the specified control points and radius.\n\t * A tiny API method \"at\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto \"WHATWG spec\"}\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarcTo (x1, y1, x2, y2, radius) {\n\t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\n\t * A tiny API method \"a\" also exists.\n\t *\n\t * @example\n\t * // draw a full circle with a radius of 20 centered at (100, 100)\n\t * arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc \"WHATWG spec\"}\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarc (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\n\t * A tiny API method \"qt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto \"WHATWG spec\"}\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tquadraticCurveTo (cpx, cpy, x, y) {\n\t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t}\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\n\t * A tiny API method \"bt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto \"WHATWG spec\"}\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbezierCurveTo (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t}\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * A tiny API method \"r\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect \"WHATWG spec\"}\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\trect (x, y, w, h) {\n\t\treturn this.append(new Rect(x, y, w, h));\n\t}\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set.\n\t * A tiny API method \"cp\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclosePath () {\n\t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t}\n\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call.\n\t * A tiny API method \"c\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclear () {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path.\n\t * A tiny API method \"f\" also exists.\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginFill (color) {\n\t\treturn this._setFill(color ? new Fill(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1).\n\t * A tiny API method \"lf\" also exists.\n\t *\n\t * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t * graphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientFill (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path.\n\t * A tiny API method \"rf\" also exists.\n\t *\n\t * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a circle to display it</caption>\n\t * graphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientFill (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path.\n\t * A tiny API method \"bf\" also exists.\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {easeljs.Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapFill (image, repetition, matrix) {\n\t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to `beginFill(null)`.\n\t * A tiny API method \"ef\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendFill () {\n\t\treturn this.beginFill();\n\t}\n\n\t/**\n\t * Sets the stroke style.\n\t * A tiny API method \"ss\" also exists.\n\t *\n\t * @example\n\t * graphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeStyle (thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t * A tiny API method `sd` also exists.\n\t *\n\t * @example\n\t * graphics.setStrokeDash([20, 10], 0);\n\t *\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeDash (segments, offset = 0) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path.\n\t * A tiny API method \"s\" also exists.\n\t *\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginStroke (color) {\n\t\treturn this._setStroke(color ? new Stroke(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\n\t * A tiny API method \"ls\" also exists.\n\t *\n\t * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t * graphics.setStrokeStyle(10)\n\t *   .beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120)\n\t *   .drawRect(20, 20, 120, 120);\n\t *\n\t * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientStroke (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path.\n\t * A tiny API method \"rs\" also exists.\n\t *\n\t * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a rectangle to display it</caption>\n\t * graphics.setStrokeStyle(10)\n\t *   .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *   .drawRect(50, 90, 150, 110);\n\t *\n\t * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientStroke (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API.\n\t * A tiny API method \"bs\" also exists.\n\t *\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=\"repeat\"] Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapStroke (image, repetition = \"repeat\") {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to `beginStroke(null)`.\n\t * A tiny API method \"es\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendStroke () {\n\t\treturn this.beginStroke();\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRect (x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.\n\t * A tiny API method \"rc\" also exists.\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRectComplex (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t}\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t * A tiny API method \"dc\" also exists.\n\t *\n\t * @example\n\t * let g = new Graphics();\n\t * g.setStrokeStyle(1);\n\t * g.beginStroke(Graphics.getRGB(0,0,0));\n\t * g.beginFill(Graphics.getRGB(255,0,0));\n\t * g.drawCircle(0,0,3);\n\t * let s = new Shape(g);\n\t * s.x = 100;\n\t * s.y = 100;\n\t * stage.addChild(s);\n\t * stage.update();\n\t *\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawCircle (x, y, radius) {\n\t\treturn this.append(new Circle(x, y, radius));\n\t}\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {@link easels.Graphics#drawCircle},\n\t * except the width and height can be different.\n\t * A tiny API method \"de\" also exists.\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawEllipse (x, y, w, h) {\n\t\treturn this.append(new Ellipse(x, y, w, h));\n\t}\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of points.\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @example <caption>Draw a 5 pointed star shape centered at 100, 100 and with a radius of 50</caption>\n\t * graphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t * // Note: -90 makes the first point vertical\n\t *\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawPolyStar (x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t}\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {@link easeljs.Graphics#draw}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands.\n\t *\n\t * @example\n\t * // attach data to our shape, so we can access it during the draw:\n\t * shape.color = \"red\";\n\t *\n\t * // append a Circle command object:\n\t * shape.graphics.append(new Graphics.Circle(50, 50, 30));\n\t *\n\t * // append a custom command object with an exec method that sets the fill style\n\t * // based on the shape's data, and then fills the circle.\n\t * shape.graphics.append({\n\t *   exec: (ctx, shape) => {\n\t *     ctx.fillStyle = shape.color;\n\t *     ctx.fill();\n\t *   }\n\t * });\n\t *\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {Boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tappend (command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t *\n\t * @param {String} str The path string to decode.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdecodePath (str) {\n\t\tlet instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tlet paramCount = [2, 2, 4, 6, 0];\n\t\tlet i = 0;\n\t\tconst l = str.length;\n\t\tlet params = [];\n\t\tlet x = 0, y = 0;\n\t\tlet base64 = Graphics._BASE_64;\n\n\t\twhile (i < l) {\n\t\t\tlet c = str.charAt(i);\n\t\t\tlet n = base64[c];\n\t\t\tlet fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tlet f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw `Bad path data (@${i}):c`; }\n\t\t\tconst pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tlet charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (let p = 0; p < pl; p++) {\n\t\t\t\tlet num = base64[str.charAt(i)];\n\t\t\t\tlet sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount === 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this, params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {@link easeljs.DisplayObject#updateCache},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t *\n\t * @example\n\t * // set up cache:\n\t * shape.cache(0,0,500,500,scale);\n\t *\n\t * // when the user drags, draw a new line:\n\t * shape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * // then draw it into the existing cache:\n\t * shape.updateCache(\"source-over\");\n\t * // store the new line, so it isn't redrawn next time:\n\t * shape.store();\n\t *\n\t * // then, when the window resizes, we can re-render at a different scale:\n\t * // first, unstore all our lines:\n\t * shape.unstore();\n\t * // then cache using the new scale:\n\t * shape.cache(0,0,500,500,newScale);\n\t * // finally, store the existing commands again:\n\t * shape.store();\n\t *\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tstore () {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {@link easeljs.Graphics#store}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tunstore () {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @return {easeljs.Graphics} A clone of the current Graphics instance.\n\t */\n\tclone () {\n\t\tlet o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Boolean} commit\n\t * @protected\n\t */\n\t_updateInstructions (commit) {\n\t\tlet instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tconst l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (let i = 0; i < l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @param {easeljs.Graphics.Fill} fill\n\t * @protected\n\t */\n\t_setFill (fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {easeljs.Graphics.Stroke} stroke\n\t * @protected\n\t */\n\t_setStroke (stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic get LineTo () { return LineTo; }\n\tstatic get MoveTo () { return MoveTo; }\n\tstatic get ArcTo () { return ArcTo; }\n\tstatic get Arc () { return Arc; }\n\tstatic get QuadraticCurveTo () { return QuadraticCurveTo; }\n\tstatic get BezierCurveTo () { return BezierCurveTo; }\n\tstatic get Rect () { return Rect; }\n\tstatic get ClosePath () { return ClosePath; }\n\tstatic get BeginPath () { return BeginPath; }\n\tstatic get Fill () { return Fill; }\n\tstatic get Stroke () { return Stroke; }\n\tstatic get StrokeStyle () { return StrokeStyle; }\n\tstatic get StrokeDash () { return StrokeDash; }\n\tstatic get RoundRect () { return RoundRect; }\n\tstatic get Circle () { return Circle; }\n\tstatic get Ellipse () { return Ellipse; }\n\tstatic get PolyStar () { return PolyStar; }\n\n}\n\n/**\n * @see {@link easeljs.Graphics#lineTo}\n * @alias easeljs.Graphics.LineTo\n * @param {Number} x\n * @param {Number} y\n */\nclass LineTo {\n\tconstructor (x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#moveTo}\n * @alias easeljs.Graphics.MoveTo\n * @param {Number} x\n * @param {Number} y\n */\nclass MoveTo {\n \tconstructor (x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n \t\tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n \texec (ctx) {\n \t\tctx.moveTo(this.x, this.y);\n \t}\n}\n\n\n/**\n * @see {@link easeljs.Graphics#arcTo}\n * @alias easeljs.Graphics.ArcTo\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} radius\n */\nclass ArcTo {\n \tconstructor (x1, y1, x2, y2, radius) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x1 = x1;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y1 = y1;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x2 = x2;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y2 = y2;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#arc}\n * @alias easeljs.Graphics.Arc\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} startAngle\n * @param {Number} endAngle\n * @param {Boolean} [anticlockwise=false]\n */\nclass Arc {\n \tconstructor (x, y, radius, startAngle, endAngle, anticlockwise = false) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.startAngle = startAngle;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.endAngle = endAngle;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t \tthis.anticlockwise = anticlockwise;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#quadraticCurveTo}\n * @alias easeljs.Graphics.QuadraticCurveTo\n * @param {Number} cpx\n * @param {Number} cpy\n * @param {Number} x\n * @param {Number} y\n */\nclass QuadraticCurveTo {\n \tconstructor (cpx, cpy, x, y) {\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t \tthis.cpx = cpx;\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\tthis.cpy = cpy;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#bezierCurveTo}\n * @alias easeljs.Graphics.BezierCurveTo\n * @param {Number} cp1x\n * @param {Number} cp1y\n * @param {Number} cp2x\n * @param {Number} cp2y\n * @param {Number} x\n * @param {Number} y\n */\nclass BezierCurveTo {\n \tconstructor (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.cp1x = cp1x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.cp1y = cp1y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.cp2x = cp2x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.cp2y = cp2y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#rect}\n * @alias easeljs.Graphics.Rect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\nclass Rect {\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.rect(this.x, this.y, this.w, this.h);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#closePath}\n * @alias easeljs.Graphics.ClosePath\n */\nclass ClosePath {\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.closePath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginPath}\n * @alias easeljs.Graphics.BeginPath\n */\nclass BeginPath {\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.beginPath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginFill}\n * @alias easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Matrix2D} matrix\n */\nclass Fill {\n\tconstructor (style, matrix) {\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @type {Object}\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @type {easeljs.Matrix2D}\n\t\t */\n\t\tthis.matrix = matrix;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tlet mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginLinearGradientFill}\n\t * @param {Array<String>} colors\n\t * @param {Array<Number>} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tlinearGradient (colors, ratios, x0, y0, x1, y1) {\n\t\tlet o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, x1, y1, type:\"linear\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginRadialGradientFill}\n\t * @param {Array<String>} colors\n\t * @param {Array<Number>} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tradialGradient (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tlet o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, r0, x1, y1, r1, type: \"radial\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginBitmapFill}\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=\"\"] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tbitmap (image, repetition = \"\") {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tlet o = this.style = Graphics._ctx.createPattern(image, repetition);\n\t\t\to.props = {image, repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginStroke}\n * @alias easeljs.Graphics.Stroke\n * @extends easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Boolean} ignoreScale\n */\nclass Stroke extends Fill {\n\tconstructor (style, ignoreScale) {\n\t\tsuper();\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @type {Object}\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @override\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#setStrokeStyle}\n * @alias easeljs.Graphics.StrokeStyle\n * @param {Number} [width=1]\n * @param {String} [caps=butt]\n * @param {String} [joints=miter]\n * @param {Number} [miterLimit=10]\n * @param {Boolean} [ignoreScale=false]\n */\nclass StrokeStyle {\n\tconstructor (width=1, caps=\"butt\", joints=\"miter\", miterLimit=10, ignoreScale=false) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.width = width;\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @type {String}\n\t\t */\n\t\tthis.caps = caps;\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @type {String}\n\t\t */\n\t\tthis.joints = joints;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.miterLimit = miterLimit;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineWidth = this.width;\n\t\tctx.lineCap = (isNaN(this.caps) ? this.caps : Graphics._STROKE_CAPS_MAP[this.caps]);\n\t\tctx.lineJoin = (isNaN(this.joints) ? this.joints : Graphics._STROKE_JOINTS_MAP[this.joints]);\n\t\tctx.miterLimit = this.miterLimit;\n\t\tctx.ignoreScale = this.ignoreScale;\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#setStrokeDash}\n * @alias easeljs.Graphics.StrokeDash\n * @param {Array} [segments=[]]\n * @param {Number} [offset=0]\n */\nclass StrokeDash {\n \tconstructor (segments=[], offset=0) {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t \tthis.segments = segments;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.offset = offset;\n \t}\n\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tif (ctx.setLineDash) { // feature detection.\n\t \t\tctx.setLineDash(this.segments);\n\t \t\tctx.lineDashOffset = this.offset;\n\t \t}\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawRoundRectComplex}\n * @alias easeljs.Graphics.RoundRect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n * @param {Number} radiusTL\n * @param {Number} radiusTR\n * @param {Number} radiusBR\n * @param {Number} radiusBL\n */\nclass RoundRect {\n \tconstructor (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radiusTL = radiusTL;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.radiusTR = radiusTR;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radiusBR = radiusBR;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.radiusBL = radiusBL;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet max = (this.w<this.h?this.w:this.h)/2;\n\t \tlet mTL=0, mTR=0, mBR=0, mBL=0;\n\t \tlet x = this.x, y = this.y, w = this.w, h = this.h;\n\t \tlet rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t \tif (rTL < 0) { rTL *= (mTL=-1); }\n\t \tif (rTL > max) { rTL = max; }\n\t \tif (rTR < 0) { rTR *= (mTR=-1); }\n\t \tif (rTR > max) { rTR = max; }\n\t \tif (rBR < 0) { rBR *= (mBR=-1); }\n\t \tif (rBR > max) { rBR = max; }\n\t \tif (rBL < 0) { rBL *= (mBL=-1); }\n\t \tif (rBL > max) { rBL = max; }\n\n\t \tctx.moveTo(x+w-rTR, y);\n\t \tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t \tctx.lineTo(x+w, y+h-rBR);\n\t \tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t \tctx.lineTo(x+rBL, y+h);\n\t \tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t \tctx.lineTo(x, y+rTL);\n\t \tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawCircle}\n * @alias easeljs.Graphics.Circle\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n */\nclass Circle {\n \tconstructor (x, y, radius) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawEllipse}\n * @alias easeljs.Graphics.Ellipse\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\nclass Ellipse {\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet w = this.w, h = this.h;\n\n\t \tlet k = 0.5522848;\n\t \tlet ox = (w / 2) * k;\n\t \tlet oy = (h / 2) * k;\n\t \tlet xe = x + w;\n\t \tlet ye = y + h;\n\t \tlet xm = x + w / 2;\n\t \tlet ym = y + h / 2;\n\n\t \tctx.moveTo(x, ym);\n\t \tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t \tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t \tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t \tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n \t}\n}\n\n/**\n *  @see {@link easeljs.Graphics#drawPolyStar}\n * @alias easeljs.Graphics.PolyStar\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} sides\n * @param {Number} [pointSize=0]\n * @param {Number} [angle=0]\n */\nclass PolyStar {\n \tconstructor (x, y, radius, sides, pointSize=0, angle=0) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.sides = sides;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.pointSize = pointSize;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.angle = angle;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet radius = this.radius;\n\t \tlet angle = this.angle/180*Math.PI;\n\t \tlet sides = this.sides;\n\t \tlet ps = 1-this.pointSize;\n\t \tlet a = Math.PI/sides;\n\n\t \tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \tfor (let i = 0; i < sides; i++) {\n\t \t\tangle += a;\n\t \t\tif (ps != 1) {\n\t \t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t \t\t}\n\t \t\tangle += a;\n\t \t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \t}\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * A reusable instance of {@link easeljs.Graphics.BeginPath} to avoid unnecessary instantiation.\n * @static\n * @readonly\n * @type {easeljs.Graphics.BeginPath}\n */\nGraphics.beginCmd = new BeginPath();\n/**\n * Map of Base64 characters to values. Used by {@link easeljs.Graphics#decodePath}.\n * @static\n * @readonly\n * @protected\n * @type {Object}\n */\nGraphics._BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n/**\n * Maps numeric values for the caps parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"butt\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"square\".</li>\n * </ul>\n *\n * @example <caption>Set line caps to \"square\"</caption>\n * graphics.ss(16, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\nGraphics._STROKE_CAPS_MAP = [\"butt\",\"round\",\"square\"];\n/**\n * Maps numeric values for the joints parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"miter\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"bevel\".</li>\n * </ul>\n *\n * @example <caption>Set the line joints to \"bevel\"</caption>\n * graphics.ss(16, 0, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\nGraphics._STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n/**\n * @static\n * @readonly\n * @protected\n * @type {CanvasRenderingContext2D}\n */\nGraphics._ctx = createCanvas().getContext(\"2d\");\n","/**\n * @license MovieClip\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Container from \"./Container\";\nimport DisplayObject from \"./DisplayObject\";\nimport Tween from \"@createjs/tweenjs/src/Tween\";\nimport Timeline from \"@createjs/tweenjs/src/Timeline\";\n\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {@link easeljs.Container}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * It is recommended to use `tween.to()` to animate and set properties (use no duration to have it set\n * immediately), and the `tween.wait()` method to create delays between animations. Note that using the\n * `tween.set()` method to affect properties will likely not provide the desired result.\n *\n * @memberof easeljs\n * @example <caption>Animate two shapes back and forth</caption>\n * let stage = new Stage(\"canvas\");\n * Ticker.addEventListener(\"tick\", stage);\n *\n * let mc = new MovieClip(null, 0, true, {start:20});\n * stage.addChild(mc);\n *\n * let child1 = new Shape(\n *   new Graphics().beginFill(\"#999999\").drawCircle(30,30,30)\n * );\n * let child2 = new Shape(\n *   new Graphics().beginFill(\"#5a9cfb\").drawCircle(30,30,30)\n * );\n *\n * mc.timeline.addTween(\n *   Tween.get(child1).to({x:0}).to({x:60}, 50).to({x:0}, 50)\n * );\n * mc.timeline.addTween(\n *   Tween.get(child2).to({x:60}).to({x:0}, 50).to({x:60}, 50)\n * );\n *\n * mc.gotoAndPlay(\"start\");\n *\n * @extends easeljs.Container\n * @param {Object} [props] The configuration properties to apply to this instances.\n * This object will also be passed into the Timeline instance associated with this MovieClip.\n * See the documentation for Timeline for a list of supported props.\n */\nexport default class MovieClip extends Container {\n\n\tconstructor (props) {\n\t\tsuper();\n\t\t!MovieClip.inited && MovieClip.init();\n\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.mode = props.mode != null ? props.mode : MovieClip.INDEPENDENT;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = props.startPosition != null ? props.startPosition : 0;\n\n\t\t/**\n     * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n     * 1 would cause it to loop once (ie. play a total of twice).\n     * @property loop\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tif (typeof props.loop === \"number\") {\n\t\t\tthis.loop = props.loop;\n\t\t} else if (props.loop === false) {\n\t\t\tthis.loop = 0;\n\t\t} else {\n\t\t\tthis.loop = -1;\n\t\t}\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the `tweenInstance.to()` method. Note that using `Tween.set` is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     * @example\n     * let tween = Tween.get(target).to({x:0}).to({x:100}, 30);\n     * let mc = new MovieClip();\n     * mc.timeline.addTween(tween);\n     *\n     * @example\n     * Tween.get(target).to({_off:false})\n     *   .wait(1).to({_off:true})\n     *   .wait(1).to({_off:false});\n     *\n     * @type {easeljs.Timeline}\n\t\t */\n\t\tthis.timeline = new Timeline(Object.assign({ useTicks: true, paused: true }, props));\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = props.paused != null ? props.paused : false;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set `body.autoReset = false`, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @type {Array}\n\t\t */\n\t\tthis.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {@link easeljs.Stage#update}.\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.framerate = null;\n\n\t\t/**\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\n\t\t/**\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\n\t\t/**\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t}\n\n\tstatic init () {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t}\n\n\t// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n\t//\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * @see {@link tweenjs.Timeline#labels}\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget labels () {\n\t\treturn this.timeline.labels;\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame.\n\t * @see {@link tweenjs.Timeline#currentLabel}\n\t * for more information.\n\t * @type {String}\n\t * @readonly\n\t */\n\tget currentLabel () {\n\t\treturn this.timeline.currentLabel;\n\t}\n\n\t /**\n \t * Returns the duration of this MovieClip in seconds or ticks.\n \t * @see {@link tweenjs.Timeline#duration}\n \t * @type {Number}\n \t * @readonly\n \t */\n \tget duration () {\n\t\treturn this.timeline.duration;\n\t}\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {@link easeljs.MovieClip#duration}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @see {@link tweenjs.Timeline#duration}\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget totalFrames () {\n\t\treturn this.duration;\n\t}\n\n\tisVisible () {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.drawCache(ctx, ignoreCache)) { return true; }\n    this._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets paused to false.\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Sets paused to true.\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and plays the timeline.\n\t * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.play();\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and stops the timeline.\n\t * @param {String | Number} positionOrLabel The animation or frame name to go to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.stop();\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set.\n\t*/\n\tadvance (time) {\n\t\tif (this.mode !== MovieClip.INDEPENDENT) { return; } // update happens in draw for synched clips\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tlet o = this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) {\n\t\t\tif (o.mode === MovieClip.INDEPENDENT) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\n\t\tif (this.paused) { return; }\n\t\t// calculate how many frames to advance:\n\t\tlet t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n\t\tlet frames = t | 0;\n\t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n\t\twhile (frames--) {\n\t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n\t\t}\n\t}\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @throws MovieClip cannot be cloned.\n\t */\n\tclone () {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow \"MovieClip cannot be cloned.\";\n\t}\n\n\t_updateState () {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t}\n\n\t_tick (evtObj) {\n\t\tthis.advance(evtObj && evtObj.delta);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_reset () {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * @param {Number} rawPosition\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t */\n\t_updateTimeline (rawPosition, jump) {\n\t\tlet synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n\t\tif (rawPosition < 1) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t}\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @protected\n\t */\n\t_renderFirstFrame () {\n\t\tconst tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t}\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @protected\n\t */\n\t_resolveState () {\n\t\tlet tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\n\t\tfor (let n in this._managed) { this._managed[n] = 1; }\n\n\t\tlet tweens = tl.tweens;\n\t\tfor (let tween of tweens) {\n\t\t\tlet target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\t\t\tlet offset = tween._stepPosition;\n\n\t\t\tif (target instanceof DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tlet kids = this.children;\n\t\tfor (let i=kids.length-1; i>=0; i--) {\n\t\t\tlet id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t */\n\t_setState (state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (let i = state.length - 1; i >= 0; i--) {\n\t\t\tlet o = state[i];\n\t\t\tlet target = o.t;\n\t\t\tlet props = o.p;\n\t\t\tfor (let n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @param {easeljs.MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t */\n\t_addManagedChild (child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child, 0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t}\n\n\t/**\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {easeljs.Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = this.getBounds();\n\t\tif (!bounds && this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn super._getBounds(matrix, ignoreTransform);\n\t}\n\n}\n\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @static\n * @type {String}\n * @default independent\n * @readonly\n */\nMovieClip.INDEPENDENT = \"independent\";\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @static\n * @type {String}\n * @default single\n * @readonly\n */\nMovieClip.SINGLE_FRAME = \"single\";\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @static\n * @type {String}\n * @default synched\n * @readonly\n */\nMovieClip.SYNCHED = \"synched\";\n/**\n * Has the MovieClipPlugin been installed to TweenJS yet?\n * @static\n * @type {Boolean}\n * @default false\n * @readonly\n */\nMovieClip.inited = false;\n\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition property from tweening.\n * @todo update to new plugin model\n * @static\n * @inner\n */\nclass MovieClipPlugin {\n\n\tconstructor () {\n\t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic install () {\n\t\tTween.installPlugin(MovieClipPlugin);\n\t}\n\n\t/**\n\t * @param {tweenjs.Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t */\n\tstatic init (tween, prop, value) {\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {tweenjs.Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio === 1 ? endValues[prop] : startValues[prop]);\n\t}\n\n}\n\n/**\n * @static\n * @type {Number}\n * @default 100\n * @readonly\n */\nMovieClipPlugin.priority = 100;\n","/**\n * @license Shadow\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {@link easeljs.DisplayObject}\n * via its `shadow` property.\n *\n * @memberof easeljs\n * @example\n * img.shadow = new Shadow(\"#000000\", 5, 5, 10);\n *\n * @param {String} [color=black] The color of the shadow. This can be any valid CSS color value.\n * @param {Number} [offsetX=0] The x offset of the shadow in pixels.\n * @param {Number} [offsetY=0] The y offset of the shadow in pixels.\n * @param {Number} [blur=0] The size of the blurring effect.\n */\nexport default class Shadow {\n\n\tconstructor (color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n\t\t/**\n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @type {String}\n\t\t * @default black\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The x offset of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX;\n\n\t\t/**\n\t\t * The y offset of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY;\n\n\t\t/**\n\t\t * The blur of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String}\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t */\n\tclone () {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t}\n\n}\n\n/**\n * An identity shadow object (all properties are set to 0).\n * @type {easeljs.Shadow}\n * @static\n * @readonly\n */\nShadow.identity = new Shadow(\"transparent\");\n","/**\n * @license Shape\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\nimport Graphics from \"./Graphics\";\n\n/**\n * A Shape allows you to display vector art in the display list. It composites a {@link easeljs.Graphics}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not change between draws, you may want to use the {@link easeljs.DisplayObject#cache}\n * method to reduce the rendering cost.\n *\n * @memberof easeljs\n * @example\n * var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n * var shape = new Shape(graphics);\n * // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n * var shape = new Shape();\n * shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @extends easeljs.DisplayObject\n * @param {easeljs.Graphics} [graphics] The graphics instance to display. If null, a new Graphics instance will be created.\n */\nexport default class Shape extends DisplayObject {\n\n\tconstructor (graphics = new Graphics()) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @type {easeljs.Graphics}\n\t\t */\n\t\tthis.graphics = graphics;\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @override\n\t * @param {Boolean} [recursive=false] If true, this Shape's {@link easeljs.Graphics} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t */\n\tclone (recursive = false) {\n\t\tlet g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn this._cloneProps(new Shape(g));\n\t}\n\n}\n","/**\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Event from \"@createjs/core/src/events/Event\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n * <br />\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n *\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n * @param {Object} data An object describing the SpriteSheet data.\n */\nexport default class SpriteSheet extends EventDispatcher {\n\n\tconstructor (data) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t */\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {@link easeljs.Sprite#framerate} for more information.\n\t\t * @type Number\n\t\t */\n\t\tthis.framerate = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._margin = 0;\n\n\t\tthis._parseData(data);\n\t}\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget animations () {\n\t\treturn this._animations.slice();\n\t}\n\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tgetNumFrames (animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tlet data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:\n\t * <ul>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the same.</li>\n\t * </ul>\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t */\n\tgetAnimation (name) {\n\t\treturn this._data[name];\n\t}\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:\n\t * <ul>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that image.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </ul>\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t */\n\tgetFrame (frameIndex) {\n\t\tlet frame;\n\t\tif (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a {@link easeljs.Rectangle} instance defining the bounds of the specified frame relative\n\t * to the origin.\n\t *\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {easeljs.Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetFrameBounds (frameIndex, rectangle = new Rectangle()) {\n\t\tlet frame = this.getFrame(frameIndex);\n\t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @override\n\t * @throws SpriteSheet cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"SpriteSheet cannot be cloned.\";\n\t}\n\n\t/**\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t */\n\t_parseData (data) {\n\t\tif (data == null) { return; }\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images) {\n\t\t\tfor (let img of data.images) {\n\t\t\t\tlet a = this._images = [];\n\t\t\t\tlet src;\n\t\t\t\tif (typeof img === \"string\") {\n\t\t\t\t\tsrc = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\timg.onload = () => this._handleImageLoad(src);\n\t\t\t\t\timg.onerror = () => this._handleImageError(src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames != null) {\n\t\t\tif (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\tfor (let arr of data.frames) {\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet o = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount === 0) { this._calculateFrames(); }\n\t\t\t}\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif (data.animations != null) {\n\t\t\tthis._data = {};\n\t\t\tlet o = data.animations;\n\t\t\tfor (let name in o) {\n\t\t\t\tlet anim = { name };\n\t\t\t\tlet obj = o[name];\n\t\t\t\tlet a;\n\t\t\t\tif (typeof obj === \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length === 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (let i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tlet frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames === \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next === name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @emits easeljs.SpriteSheet#event:complete\n\t * @protected\n\t * @param {Object} src\n\t */\n\t _handleImageLoad (src) {\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @emits easeljs.SpriteSheet#event:complete\n\t * @emits easeljs.SpriteSheet#event:error\n\t * @protected\n\t * @param {Object} src\n\t */\n\t_handleImageError (src) {\n\t\tlet errorEvent = new Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_calculateFrames () {\n\t\tif (this._frames || this._frameWidth === 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tlet maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tlet frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tlet spacing = this._spacing, margin = this._margin;\n\n\t\timgLoop:\n\t\tfor (let i=0, imgs=this._images, l=imgs.length; i<l; i++) {\n\t\t\tlet img = imgs[i],\n\t\t\t\timgW = (img.width||img.naturalWidth),\n\t\t\t\timgH = (img.height||img.naturalHeight);\n\n\t\t\tlet y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tlet x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\timage: img,\n\t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t}\n\n}\n\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event easeljs.SpriteSheet#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {@link easeljs.SpriteSheetBuilder}\n * when doing on-demand rendering.\n * @event easeljs.SpriteSheet#getframe\n * @property {Number} index The frame index.\n * @property {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {@link easeljs.SpriteSheet#event:complete}\n * event once all images are finished processing, even if an error is encountered.\n * @event easeljs.SpriteSheet#error\n * @property {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n","/**\n * @license Text\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport DisplayObject from \"./DisplayObject\";\nimport createCanvas from \"../utils/Canvas\";\n\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {@link easeljs.DisplayObject#localToGlobal}\n * method, or using {@link easeljs.DOMElement}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let text = new Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n * text.x = 100;\n * text.textBaseline = \"alphabetic\";\n *\n * @param {String} [text] The text to display.\n * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n * 36px Arial\").\n * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n * \"#F00\", \"red\", or \"#FF0000\").\n */\nexport default class Text extends DisplayObject {\n\n\tconstructor (text, font, color) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text to display.\n\t\t * @type {String}\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @type {String}\n\t\t */\n\t\tthis.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @type {String}\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {String}\n\t\t * @default left\n\t\t */\n\t\tthis.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {String}\n\t\t * @default top\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width.\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.lineWidth = null;\n\t}\n\n \tisVisible () {\n \t\tlet hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n \t}\n\n \tdraw (ctx, ignoreCache) {\n \t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n \t\tlet col = this.color || \"#000\";\n \t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n \t\telse { ctx.fillStyle = col; }\n\n \t\tthis._drawText(this._prepContext(ctx));\n \t\treturn true;\n \t}\n\n \t/**\n \t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n \t * @return {Number} The measured, untransformed width of the text.\n \t */\n \tgetMeasuredWidth () {\n \t\treturn this._getMeasuredWidth(this.text);\n \t}\n\n \t/**\n \t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n \t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n \t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n \t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n \t */\n \tgetMeasuredLineHeight () {\n \t\treturn this._getMeasuredWidth(\"M\")*1.2;\n \t}\n\n \t/**\n \t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n \t * `lineHeight` (if specified) or {@link easeljs.Text#getMeasuredLineHeight}. Note that\n \t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n \t * @return {Number} The approximate height of the untransformed multi-line text.\n \t */\n \tgetMeasuredHeight () {\n \t\treturn this._drawText(null, {}).height;\n \t}\n\n \tgetBounds () {\n \t\tlet rect = super.getBounds();\n \t\tif (rect) { return rect; }\n \t\tif (this.text == null || this.text === \"\") { return null; }\n \t\tlet o = this._drawText(null, {});\n \t\tlet w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n \t\tlet x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n \t\tlet y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._rectangle.setValues(x, y, w, o.height);\n \t}\n\n \t/**\n \t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n \t * of the drawn text. The lines property contains an array of strings, one for\n \t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n \t * whitespace removed.\n \t * @return {Object} An object with width, height, and lines properties.\n \t */\n \tgetMetrics () {\n \t\tlet o = {lines:[]};\n \t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n \t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._drawText(null, o, o.lines);\n \t}\n\n \t/**\n \t * Returns a clone of the Text instance.\n \t * @return {easeljs.Text} a clone of the Text instance.\n \t */\n \tclone () {\n \t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n \t}\n\n \t/**\n \t * Returns a string representation of this object.\n \t * @override\n \t * @return {String} a string representation of the instance.\n \t */\n \ttoString () {\n \t\treturn `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n \t}\n\n \t/**\n \t * @param {easeljs.Text} o\n \t * @protected\n \t * @return {easeljs.Text} o\n \t */\n \t_cloneProps (o) {\n \t\tsuper._cloneProps(o);\n \t\to.textAlign = this.textAlign;\n \t\to.textBaseline = this.textBaseline;\n \t\to.maxWidth = this.maxWidth;\n \t\to.outline = this.outline;\n \t\to.lineHeight = this.lineHeight;\n \t\to.lineWidth = this.lineWidth;\n \t\treturn o;\n \t}\n\n \t/**\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @return {CanvasRenderingContext2D}\n \t * @protected\n \t */\n \t_prepContext (ctx) {\n \t\tctx.font = this.font||\"10px sans-serif\";\n \t\tctx.textAlign = this.textAlign||\"left\";\n \t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Draws multiline text.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t */\n \t_drawText (ctx, o, lines) {\n \t\tconst paint = !!ctx;\n \t\tif (!paint) {\n \t\t\tctx = Text._ctx;\n \t\t\tctx.save();\n \t\t\tthis._prepContext(ctx);\n \t\t}\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\n \t\tlet maxW = 0, count = 0;\n \t\tlet hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n \t\tfor (let str of hardLines) {\n \t\t\tlet w = null;\n\n \t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n \t\t\t\t// text wrapping:\n \t\t\t\tlet words = str.split(/(\\s)/);\n \t\t\t\tstr = words[0];\n \t\t\t\tw = ctx.measureText(str).width;\n\n\t\t\t\tconst l = words.length;\n \t\t\t\tfor (let i=1; i<l; i+=2) {\n \t\t\t\t\t// Line needs to wrap:\n \t\t\t\t\tlet wordW = ctx.measureText(words[i] + words[i+1]).width;\n \t\t\t\t\tif (w + wordW > this.lineWidth) {\n \t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\t\t\t\tif (lines) { lines.push(str); }\n \t\t\t\t\t\tif (w > maxW) { maxW = w; }\n \t\t\t\t\t\tstr = words[i+1];\n \t\t\t\t\t\tw = ctx.measureText(str).width;\n \t\t\t\t\t\tcount++;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tstr += words[i] + words[i+1];\n \t\t\t\t\t\tw += wordW;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n\n \t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\tif (lines) { lines.push(str); }\n \t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n \t\t\tif (w > maxW) { maxW = w; }\n \t\t\tcount++;\n \t\t}\n\n \t\tif (o) {\n \t\t\to.width = maxW;\n \t\t\to.height = count*lineHeight;\n \t\t}\n \t\tif (!paint) { ctx.restore(); }\n \t\treturn o;\n \t}\n\n \t/**\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @param {String} text\n \t * @param {Number} y\n \t * @protected\n \t */\n \t_drawTextLine (ctx, text, y) {\n \t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n \t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n \t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n \t}\n\n \t/**\n \t * @param {String} text\n \t * @protected\n \t */\n \t_getMeasuredWidth (text) {\n \t\tlet ctx = Text._ctx;\n \t\tctx.save();\n \t\tlet w = this._prepContext(ctx).measureText(text).width;\n \t\tctx.restore();\n \t\treturn w;\n \t}\n\n}\n\n/**\n * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n * @type {Object}\n * @readonly\n * @static\n */\nText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n/**\n * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n * @type {Object}\n * @readonly\n * @static\n */\nText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\n/**\n * @property _ctx\n * @type {CanvasRenderingContext2D}\n * @private\n * @static\n */\nText._ctx = createCanvas().getContext(\"2d\");\n","/**\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {@link easeljs.AlphaMaskFilter}, because it has much better performance.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example *\n * let box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * let bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMapFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n * result. This should be exactly the same dimensions as the target.\n */\nexport default class AlphaMapFilter extends Filter {\n\n\tconstructor (alphaMap) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t */\n\t\tthis.alphaMap = alphaMap;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t * @default null\n\t\t */\n\t\tthis._alphaMap = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Uint8ClampedArray}\n\t\t * @default null\n\t\t */\n\t\tthis._mapData = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {*}\n\t\t * @default null\n\t\t */\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * @todo docs\n\t * @param {*} gl\n\t * @param {*} stage\n\t * @param {*} shaderProgram\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.AlphaMapFilter}\n\t */\n\tclone () {\n\t\tlet o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t}\n\n\t_applyFilter (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tlet data = imageData.data;\n\t\tlet map = this._mapData;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_prepAlphaMap () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap === this._alphaMap && this._mapData) { return true; }\n\t\tthis._mapData = null;\n\n\t\tlet map = this._alphaMap = this.alphaMap;\n\t\tlet canvas = map;\n\t\tlet ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n}\n","/**\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * var box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * var bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMaskFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} mask\n */\nexport default class AlphaMaskFilter extends Filter {\n\n\tconstructor (mask) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t */\n\t\tthis.mask = mask;\n\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</strong>\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t}\n\n\t/**\n\t * @return {easeljs.AlphaMaskFilter}\n\t */\n\tclone () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t}\n\n\t/**\n\t * @todo docs\n\t * @param {*} gl\n\t * @param {*} stage\n\t * @param {*} shaderProgram\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n}\n","/**\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\nimport Rectangle from \"../geom/Rectangle\";\n\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({x:100,y:100});\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * let blurFilter = new BlurFilter(5, 5, 1);\n * shape.filters = [blurFilter];\n * let bounds = blurFilter.getBounds();\n * shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n * @param {Number} [blurY=0] The vertical blur radius in pixels.\n * @param {Number} [quality=1] The number of blur iterations.\n */\nexport default class BlurFilter extends Filter {\n\n\tconstructor (blurX = 0, blurY = 0, quality = 1) {\n\t\tsuper();\n\n\t\t/**\n\t\t * @protected\n\t\t * @default 0\n\t\t * @type {Number}\n\t\t */\n\t\tthis._blurX = blurX;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._blurXTable = [];\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * @default 0\n\t\t * @type {Number}\n\t\t */\n\t\tthis._blurY = blurY;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._blurYTable = [];\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @default 1\n\t\t * @type {Number}\n\t\t */\n\t\tthis._quality = (isNaN(quality) || quality < 1) ? 1 : quality;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastQuality = null;\n\n\t\tthis.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * Horizontal blur radius in pixels.\n\t * @type {Number}\n\t */\n\tget blurX () { return this._blurX; }\n\tset blurX (blurX) {\n\t\tif (isNaN(blurX) || blurX < 0) { blurX = 0; }\n\t\tthis._blurX = blurX;\n\t}\n\n\t/**\n\t * Vertical blur radius in pixels.\n\t * @type {Number}\n\t */\n\tget blurY () { return this._blurY; }\n\tset blurY (blurY) {\n\t\tif (isNaN(blurY) || blurY < 0) { blurY = 0; }\n\t\tthis._blurY = blurY;\n\t}\n\n\t/**\n\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t * smoother blur, but take twice as long to run.\n\t * @type {Number}\n\t */\n\tget quality () { return this._quality | 0; }\n\tset quality (quality) {\n\t\tif (isNaN(quality) || quality < 0) { quality = 0; }\n\t\tthis._quality = quality;\n\t}\n\n\t/**\n\t * @protected\n\t * @type {*}\n\t */\n\tget _buildShader () {\n\t\tconst xChange = this._lastBlurX !== this._blurX;\n\t\tconst yChange = this._lastBlurY !== this._blurY;\n\t\tconst qChange = this._lastQuality !== this._quality;\n\t\tif (xChange || yChange || qChange) {\n\t\t\t\tif (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\t\tif (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\t\tthis._updateShader();\n\t\t\t\tthis._lastBlurX = this._blurX;\n\t\t\t\tthis._lastBlurY = this._blurY;\n\t\t\t\tthis._lastQuality = this._quality;\n\t\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t}\n\tset _builtShader (value) { this._compiledShader = value; }\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t}\n\n\tgetBounds (rect) {\n\t\tlet x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tlet q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t}\n\n\t/**\n\t * @return {easeljs.BlurFilter}\n\t */\n\tclone () {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t}\n\n\t_updateShader () {\n\t\tlet result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t}\n\n\t_getTable (spread) {\n\t\tconst EDGE = 4.2;\n\t\tif (spread <= 1) { return [1]; }\n\n\t\tlet result = [];\n\t\tlet count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tlet adjust = (count/2)|0;\n\t\tfor (let i = -adjust; i<=adjust; i++) {\n\t\t\tlet x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tlet factor = result.reduce((a, b) => a + b, 0);\n\t\treturn result.map(currentValue => currentValue / factor);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tlet radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX === 0 && radiusY === 0) return false;\n\n\t\tlet iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tlet px = imageData.data;\n\t\tlet x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tlet divx = (radiusX + radiusX + 1) | 0;\n\t\tlet divy = (radiusY + radiusY + 1) | 0;\n\t\tlet w = imageData.width | 0;\n\t\tlet h = imageData.height | 0;\n\n\t\tlet w1 = (w - 1) | 0;\n\t\tlet h1 = (h - 1) | 0;\n\t\tlet rxp1 = (radiusX + 1) | 0;\n\t\tlet ryp1 = (radiusY + 1) | 0;\n\n\t\tlet ssx = {r:0,b:0,g:0,a:0};\n\t\tlet sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tlet ssy = {r:0,b:0,g:0,a:0};\n\t\tlet sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tlet si = null;\n\n\n\t\tlet mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tlet stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tlet mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tlet sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tlet ms = mtx;\n\t\t\tlet ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}\n\n}\n\n/**\n * Array of multiply values for blur calculations.\n * @type {Array}\n * @protected\n * @readonly\n * @static\n */\nBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n/**\n * Array of shift values for blur calculations.\n * @type {Array}\n * @protected\n * @static\n */\nBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n","/**\n * @license ColorFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Applies a color transform to DisplayObjects.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * shape.filters = [ new ColorFilter(0,0,0,1, 0,0,255,0) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n * between -255 and 255.\n */\nexport default class ColorFilter extends Filter {\n\n\tconstructor (redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.redMultiplier = redMultiplier;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.greenMultiplier = greenMultiplier;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.blueMultiplier = blueMultiplier;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.redOffset = redOffset;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.greenOffset = greenOffset;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.blueOffset = blueOffset;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.alphaOffset = alphaOffset;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\n\t}\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.ColorFilter}\n\t */\n\tclone () {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/**\n * @license ColorMatrix\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Provides helper functions for assembling a matrix for use with the {@link easeljs.ColorMatrixFilter}.\n * Most methods return the instance to facilitate chained calls.\n *\n * @memberof easeljs\n * @example\n * colorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * @param {Number} brightness\n * @param {Number} contrast\n * @param {Number} saturation\n * @param {Number} hue\n */\nexport default class ColorMatrix {\n\n\tconstructor (brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the instance with the specified values.\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetColor (brightness, contrast, saturation, hue) {\n\t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\treset () {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t}\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue. Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustColor (brightness, contrast, saturation, hue) {\n\t\treturn this.adjustBrightness(brightness).adjustContrast(contrast).adjustSaturation(saturation).adjustHue(hue);\n\t}\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustBrightness (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustContrast (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x === 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustSaturation (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tlet lumR = 0.3086;\n\t\tlet lumG = 0.6094;\n\t\tlet lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustHue (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 180)/180*Math.PI;\n\t\tlet cosVal = Math.cos(value);\n\t\tlet sinVal = Math.sin(value);\n\t\tlet lumR = 0.213;\n\t\tlet lumG = 0.715;\n\t\tlet lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tconcat (matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {easeljs.ColorMatrix} A clone of this ColorMatrix.\n\t */\n\tclone () {\n\t\treturn (new ColorMatrix()).copy(this);\n\t}\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @return {Array} An array holding this matrix's values.\n\t */\n\ttoArray () {\n\t\tconst arr = [];\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @param {Array | easeljs.ColorMatrix} matrix An array or ColorMatrix instance.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tcopy (matrix) {\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_multiplyMatrix (matrix) {\n\t\tlet col = [];\n\n\t\tfor (let i=0;i<5;i++) {\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tlet val=0;\n\t\t\t\tfor (let k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t */\n\t_cleanValue (value, limit) {\n\t\treturn Math.min(limit, Math.max(-limit, value));\n\t}\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_fixMatrix (matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t}\n\n}\n\n/**\n * Array of delta values for contrast calculations.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.DELTA_INDEX = Object.freeze([\n \t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n \t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n \t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n \t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n \t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n \t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n \t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n \t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n \t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n \t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n \t10.0\n]);\n/**\n * Identity matrix values.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.IDENTITY_MATRIX = Object.freeze([\n \t1,0,0,0,0,\n \t0,1,0,0,0,\n \t0,0,1,0,0,\n \t0,0,0,1,0,\n \t0,0,0,0,1\n]);\n/**\n * The constant length of a color matrix.\n * @type {Number}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.LENGTH = 25;\n","/**\n * @license ColorMatrixFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Filter from \"./Filter\";\n\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {@link easeljs.ColorMatrix} for more information on changing colors. For an easier color transform,\n * consider the {@link easeljs.ColorFilter}.\n *\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 50);\n * let matrix = new ColorMatrix().adjustHue(180).adjustSaturation(100);\n * shape.filters = [ new ColorMatrixFilter(matrix) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Array | easeljs.ColorMatrix} matrix A 4x5 matrix describing the color operation to perform.\n */\nexport default class ColorMatrixFilter extends Filter {\n\n\tconstructor (matrix) {\n\t\tsuper();\n\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform.\n\t\t * @type {Array | easeljs.ColorMatrix}\n\t\t */\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t}\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tlet mat = this.matrix;\n\t\tlet colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.ColorMatrixFilter}\n\t */\n\tclone () {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tlet r,g,b,a;\n\t\tlet mtx = this.matrix;\n\t\tlet m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tlet m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tlet m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tlet m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n","/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {@link easeljs.MovieClip} or\n * {@link easeljs.Sprite} instances. This class will intercept mouse events from an object, and\n * automatically call {@link easeljs.Sprite#gotoAndStop} or {@link easlejs.Sprite#gotoAndPlay},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {@link easeljs.Stage#enableMouseOver}.\n *\n * @memberof easeljs\n * @example\n * let helper = new ButtonHelper(sprite, \"out\", \"over\", \"down\", false, sprite, \"hit\");\n * sprite.addEventListener(\"click\", (evt) => {\n *   // clicked\n * }));\n *\n * @param {easeljs.Sprite | easeljs.MovieClip} target The instance to manage.\n * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n * states.\n * @param {easeljs.DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n * used for the hitState.\n * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n * null, then the default state of the hitArea will be used.\n */\nexport default class ButtonHelper {\n\n\tconstructor (target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @type {easeljs.MovieClip | easeljs.Sprite}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target.\n\t\t * @default \"over\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.overLabel = overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target.\n\t\t * @default \"out\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.outLabel = outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target.\n\t\t * @default \"down\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.downLabel = downLabel == null;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop.\n\t\t * @default false\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.play = play;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._isPressed = false;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._isOver = false;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._enabled = false;\n\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @type {Boolean}\n\t */\n\tget enabled () { return this._enabled; }\n\tset enabled (enabled) {\n\t\tif (enabled === this._enabled) { return; }\n\t\tlet o = this.target;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t */\n\thandleEvent (evt) {\n\t\tlet label, t = this.target, type = evt.type;\n\t\tif (type === \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type === \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type === \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t}\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @protected\n\t */\n\t_reset () {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tlet p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t}\n\n}\n","/**\n * @license Touch\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n * @memberof easeljs\n * @name easeljs.Touch\n * @example\n * let stage = new Stage(\"canvasId\");\n * Touch.enable(stage);\n */\nexport default Touch = {\n\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t */\n\tisSupported () {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.MSPointerEvent && window.navigator.msMaxTouchPoints > 0) // IE10\n\t\t\t|| (window.PointerEvent && window.navigator.maxTouchPoints > 0)); // IE11+\n\t},\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {@link easeljs.Stage}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {@link easeljs.MouseEvent} model, but without support for\n\t * double click or over/out events.\n\t * @param {easeljs.Stage} stage The Stage to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t */\n\tenable (stage, singleTouch = false, allowDefault = false) {\n\t\tif (!stage || !stage.canvas || !this.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { this._IOS_enable(stage); }\n\t\telse if (window.PointerEvent || window.MSPointerEvent) { this._IE_enable(stage); }\n\t\treturn true;\n\t},\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @param {easeljs.Stage} stage The Stage to disable touch on.\n\t */\n\tdisable (stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { this._IOS_disable(stage); }\n\t\telse if (window.PointerEvent || window.MSPointerEvent) { this._IE_disable(stage); }\n\t\tdelete stage.__touch;\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IOS_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => this._IOS_handleEvent(stage, e);\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IOS_disable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tlet f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {Object} e The event to handle\n\t */\n\t_IOS_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tlet touches = e.changedTouches;\n\t\tlet type = e.type;\n\t\tconst l = touches.length;\n\t\tfor (let touch of touches) {\n\t\t\tlet id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type === \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IE_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => this._IE_handleEvent(stage,e);\n\n\t\tif (window.PointerEvent === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IE_disable (stage) {\n\t\tlet f = stage.__touch.f;\n\n\t\tif (window.PointerEvent === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {Object} e The event to handle.\n\t */\n\t_IE_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tlet type = e.type;\n\t\tlet id = e.pointerId;\n\t\tlet ids = stage.__touch.activeIDs;\n\n\t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\"\n\t\t\t\t\t|| type === \"pointerup\" || type === \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\t_handleStart (stage, id, e, x, y) {\n\t\tlet props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tlet ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\t_handleMove (stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t */\n\t_handleEnd (stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tlet props = stage.__touch;\n\t\tlet ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t}\n\n}\n","/**\n * @license SpriteSheetBuilder\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Rectangle from \"../geom/Rectangle\";\nimport SpriteSheet from \"../display/SpriteSheet\";\nimport Event from \"@createjs/core/src/events/Event\";\n\n/**\n * The SpriteSheetBuilder allows you to generate {@link easeljs.SpriteSheet} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {@link easeljs.SpriteSheetBuilder#maxWidth}\n * or {@link easeljs.SpriteSheetBuilder#maxHeight}.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n *\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {@link easeljs.SpriteSheet} instances that are created.\n */\nexport default class SpriteSheetBuilder extends EventDispatcher {\n\n\tconstructor (framerate = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @type {Number}\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @type {Number}\n\t\t * @default 2048\n\t\t */\n\t\tthis.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @type {easeljs.SpriteSheet}\n\t\t */\n\t\tthis.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @type {Number}\n\t\t* @default 1\n\t\t*/\n\t\tthis.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @type {Number}\n\t\t * @default 0.3\n\t\t */\n\t\tthis.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {@link easeljs.SpriteSheet#framerate} value that will be passed to new SpriteSheet instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {@link core.Ticker} framerate.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._frames = [];\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._animations = {};\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._timerID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._scale = 1;\n\t}\n\n\t/**\n\t * Adds a frame to the {@link easeljs.SpriteSheet}. Note that the frame will not be drawn until you\n\t * call {@link easeljs.SpriteSheetBuilder#build} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {@link easeljs.Container}\n\t * and pass in the Container as the source.\n\t * @param {easeljs.DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {easeljs.Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t */\n\taddFrame (source, sourceRect, scale = 1, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect) { return null; }\n\t\treturn this._frames.push({ source, sourceRect: rect, scale, funct: setupFunction, data: setupData, index: this._frames.length, height: rect.height*scale }) - 1;\n\t}\n\n\t/**\n\t * Adds an animation that will be included in the created {@link easeljs.SpriteSheet}.\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t */\n\taddAnimation (name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = { frames, next, speed };\n\t}\n\n\t/**\n\t * This will take a {@link easeljs.MovieClip} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {@link easeljs.MovieClip#actionsEnabled}\n\t * set to `false`, ending on the last frame.\n\t * @param {easeljs.MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {easeljs.Rectangle} [sourceRect] A Rectangle defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t */\n\taddMovieClip (source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rects = source.frameBounds;\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect && !rects) { return; }\n\n\t\tlet baseFrameIndex = this._frames.length;\n\t\tconst duration = source.timeline.duration;\n\t\tfor (let i=0; i<duration; i++) {\n\t\t\tlet r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i, f:setupFunction, d:setupData});\n\t\t}\n\t\tconst labels = source.timeline._labels;\n\t\tlet lbls = [];\n\t\tfor (let n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort((a, b) => a.index-b.index);\n\t\t\tfor (let i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tlet label = lbls[i].label;\n\t\t\t\tlet start = baseFrameIndex+lbls[i].index;\n\t\t\t\tlet end = baseFrameIndex+((i === l-1) ? duration : lbls[i+1].index);\n\t\t\t\tlet frames = [];\n\t\t\t\tfor (let i=start; i<end; i++) { frames.push(i); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds a {@link easeljs.SpriteSheet} instance based on the current frames.\n\t * @return {easeljs.SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t */\n\tbuild () {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t}\n\n\t/**\n\t * Asynchronously builds a {@link easeljs.SpriteSheet} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t */\n\tbuildAsync (timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tthis._timerID = setTimeout(() => this._run(), 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t}\n\n\t/**\n\t * Stops the current asynchronous build.\n\t */\n\tstopAsync () {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @override\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_startBuild () {\n\t\tlet pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tlet dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tlet frames = this._frames.slice();\n\t\tframes.sort((a, b) => (a.height<=b.height) ? -1 : 1);\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tlet y=0, x=0;\n\t\tlet img = 0;\n\t\twhile (frames.length) {\n\t\t\tlet o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tlet canvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_setupMovieClipFrame (source, data) {\n\t\tlet ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t}\n\n\t/**\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_getSize (size, max) {\n\t\tlet pow = 4;\n\t\twhile (Math.pow(2, ++pow) < size) {}\n\t\treturn Math.min(max, Math.pow(2, pow));\n\t};\n\n\t/**\n\t * @protected\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @return {Number} The width & height of the row.\n\t */\n\t_fillRow (frames, y, img, dataFrames, pad) {\n\t\tlet w = this.maxWidth;\n\t\tlet maxH = this.maxHeight;\n\t\ty += pad;\n\t\tlet h = maxH-y;\n\t\tlet x = pad;\n\t\tlet height = 0;\n\t\tfor (let i=frames.length-1; i>=0; i--) {\n\t\t\tlet frame = frames[i];\n\t\t\tlet sc = this._scale*frame.scale;\n\t\t\tlet rect = frame.sourceRect;\n\t\t\tlet source = frame.source;\n\t\t\tlet rx = Math.floor(sc*rect.x-pad);\n\t\t\tlet ry = Math.floor(sc*rect.y-pad);\n\t\t\tlet rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tlet rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_endBuild () {\n\t\tthis.spriteSheet = new SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_run () {\n\t\tlet ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tlet t = (new Date()).getTime()+ts;\n\t\tlet complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tthis._timerID = setTimeout(() => this._run(), 50-ts);\n\t\t}\n\t\tlet p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tlet evt = new Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @return {Boolean} Returns false if this is the last draw.\n\t */\n\t_drawNext () {\n\t\tlet frame = this._frames[this._index];\n\t\tlet sc = frame.scale*this._scale;\n\t\tlet rect = frame.rect;\n\t\tlet sourceRect = frame.sourceRect;\n\t\tlet canvas = this._data.images[frame.img];\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t}\n\n}\n\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\nSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\nSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n/**\n * Dispatched when a build completes.\n * @event easeljs.SpriteSheetBuilder#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event easeljs.SpriteSheetBuilder#progress\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n","/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport createCanvas from \"./Canvas\";\n\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n *\n * @memberof easeljs\n * @name easeljs.SpriteSheetUtils\n */\nexport default SpriteSheetUtils = {\n\n\t/**\n\t * @protected\n\t * @type {HTMLCanvasElement | Object}\n\t */\n\t_workingCanvas: createCanvas(),\n\n\t/**\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t */\n\tget _workingContext () { return this._workingCanvas.getContext(\"2d\"); },\n\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {@link easeljs.Sprite}\n\t * with a {@link easeljs.Sprite#gotoAndStop} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {@link easeljs.Bitmap#sourceRect}\n\t * property of {@link easeljs.Bitmap}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t *\n\t * @param {easeljs.SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number | String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t */\n\textractFrame (spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tlet data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tlet r = data.rect;\n\t\tlet canvas = this._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tthis._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tlet img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t},\n\n\t/**\n\t * @protected\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @param {Number} count\n\t * @param {Number} h\n\t * @param {Number} v\n\t */\n\t_flip (spriteSheet, count, h, v) {\n\t\tlet imgs = spriteSheet._images;\n\t\tlet canvas = this._workingCanvas;\n\t\tlet ctx = this._workingContext;\n\t\tconst il = imgs.length/count;\n\t\tfor (let i=0; i<il; i++) {\n\t\t\tlet src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tlet img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tlet frames = spriteSheet._frames;\n\t\tconst fl = frames.length/count;\n\t\tfor (let i=0; i<fl; i++) {\n\t\t\tlet src = frames[i];\n\t\t\tlet rect = src.rect.clone();\n\t\t\tlet img = imgs[src.image.__tmp+il*count];\n\n\t\t\tlet frame = {image:img,rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tlet sfx = `_${h?\"h\":\"\"}${v?\"v\":\"\"}`;\n\t\tlet names = spriteSheet._animations;\n\t\tlet data = spriteSheet._data;\n\t\tconst al = names.length/count;\n\t\tfor (let i=0; i<al; i++) {\n\t\t\tlet name = names[i];\n\t\t\tlet src = data[name];\n\t\t\tlet anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tlet frames = src.frames;\n\t\t\tfor (let i=0,l=frames.length;i<l;i++) {\n\t\t\t\tanim.frames.push(frames[i]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t}\n\n}\n","/**\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\n\n /**\n  * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n  * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n  * utilities.\n  *\n  * @memberof easeljs\n  * @extends core.EventDispatcher\n  *\n  * @param {StageGL} stage The default stage to use when none is supplied.\n  */\nexport default class WebGLInspector extends EventDispatcher {\n\n\tconstructor (stage) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The internal reference to the default stage this Inspector is for.\n\t\t * @protected\n\t\t * @type {easeljs.StageGL}\n\t\t */\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Utility function for use with {@link easeljs.WebGLInspector#logDepth}. Logs an item's position and registration.\n\t * Useful to see if something is being forced off screen or has an integer position.\n\t * @param {easeljs.DisplayObject} item The item we're currently logging about.\n\t * @param {String} [prepend] The string to show before the item, usually formatting for a tree view.\n\t * @static\n\t */\n\tstatic dispProps (item, prepend = \"\") {\n\t\tlet p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t\tlet r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\t\tWebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t}\n\n\t/**\n\t * Log with alternateOutput if available, defaulting to the console.\n\t * @param {...*} info The info to log.\n\t * @static\n\t */\n\tstatic _log (...info) {\n\t\tif (WebGLInspector.alternateOutput) {\n\t\t\tWebGLInspector.alternateOutput.log(...info);\n\t\t} else {\n\t\t\tconsole.log(...info);\n\t\t}\n\t}\n\n\t/**\n\t * Perform all of the logging reports at once.\n\t * @param {easeljs.StageGL} [stage] The stage to log information for.\n\t */\n\tlog (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\t\tWebGLInspector._log(`Batches Per Draw: ${(stage._batchID/stage._drawID).toFixed(4)}`);\n\t\tthis.logContextInfo(stage._webGLContext);\n\t\tthis.logDepth(stage.children, \"\");\n\t\tthis.logTextureFill(stage);\n\t}\n\n\t/**\n\t * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring rendering.\n\t * @param {StageGL} [stage=] The stage to log information for.\n\t * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t */\n\ttoggleGPUDraw (stage, enabled) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tif (enabled === undefined) {\n\t\t\tenabled = !!stage._drawBuffers_;\n\t\t}\n\n\t\tif (enabled && stage._drawBuffers_) {\n\t\t\tstage._drawBuffers = stage._drawBuffers_;\n\t\t\tstage._drawBuffers_ = undefined;\n\t\t} else {\n\t\t\tstage._drawBuffers_ = stage._drawBuffers;\n\t\t\tstage._drawBuffers = function _inspectorDrawBuffers (gl) {\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tWebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t * @param {Array} [children] The children array to walk through.\n\t * @param {String} [prepend] What to prepend to this output from this point onwards.\n\t * @param {Function} [logFunc] Custom logging function, mainly for filtering or formatting output.\n\t */\n\tlogDepth (children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t\tif (!children) { children = this._stage.children; }\n\t\tconst l = children.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet child = children[i];\n\t\t\tlogFunc(`${prepend}-`, child);\n\t\t\tif (child.children && child.children.length) {\n\t\t\t\tthis.logDepth(child.children, `|${prepend}`, logFunc);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Examine the context and provide information about its capabilities.\n\t * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t */\n\tlogContextInfo (gl) {\n\t\tif (!gl) { gl = this._stage._webGLContext; }\n\t\tlet data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE)/2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)/2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\t\tWebGLInspector._log(data);\n\t}\n\n\t/**\n\t * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t * in place.\n\t * @param {StageGL} [stage] The stage to log information for.\n\t */\n\tlogTextureFill (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tlet dict = stage._textureDictionary;\n\t\tlet count = stage._batchTextureCount;\n\t\tWebGLInspector._log(`${textureMax}: ${count}`);\n\t\tlet output = [];\n\t\tfor (let n in dict) {\n\t\t\tlet str = n.replace(window.location.origin, \"\");\n\t\t\tlet tex = dict[n];\n\t\t\tlet shifted = tex._lastActiveIndex?tex._lastActiveIndex === tex._activeIndex:false;\n\t\t\toutput.push({src, element:tex, shifted});\n\t\t\ttex._lastActiveIndex = tex._activeIndex;\n\t\t}\n\n\t\toutput.sort((a,b) => {\n\t\t\tif (a.element._drawID === stage._drawID) { return 1; }\n\t\t\tif (a.element._drawID < b.element._drawID) { return -1; }\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst l = output.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet out = output[i];\n\t\t\tlet active = out.element._drawID === stage._drawID;\n\t\t\tWebGLInspector._log(`[${out.src}] ${active?\"ACTIVE\":\"stale\"} ${out.shifted?\"steady\":\"DRIFT\"}`, out.element);\n\t\t}\n\t}\n\n}\n\n/**\n * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n * Expects object with a \"log\" function that takes any number of params.\n * @type {Console}\n * @default null\n * @static\n * @protected\n */\nWebGLInspector.alternateOutput = null;\n"]}